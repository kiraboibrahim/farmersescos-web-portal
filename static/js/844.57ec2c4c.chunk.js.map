{"version":3,"file":"static/js/844.57ec2c4c.chunk.js","mappings":"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","sources":["components/common/fields/RemoteSelect.js","validation-schemas/product/ProductSchema.js","components/ProductDetail/ProductForm.js","hooks/useUpdateProduct.js","components/LearningMaterialList/LearningMaterialList.js","components/ProductDetail/ProductDetail.js","hooks/useDeleteProduct.js","components/common/fields/DirtyFormik.js","utils/difference.js"],"sourcesContent":["import { FormControl, FormLabel, Box, FormHelperText } from \"@mui/joy\";\nimport AsyncSelect from \"react-select/async\";\nimport { useField } from \"formik\";\nimport { useTheme } from \"@mui/joy/styles\";\n\nexport default function RemoteSelect({\n  name,\n  label,\n  defaultOptions = true,\n  getOptions,\n  getOptionLabel,\n  getOptionValue,\n  isMulti,\n  placeholder,\n  sx,\n  ...props\n}) {\n  const theme = useTheme();\n  const [\n    ,\n    { value: selectedOptions, touched, error },\n    { setValue, setTouched },\n  ] = useField({ name, ...props });\n\n  const hasError = touched && !!error;\n  return (\n    <FormControl sx={Array.isArray(sx) ? sx : [sx]} error={hasError}>\n      <FormLabel>{label}</FormLabel>\n      <Box sx={{ display: \"flex\", flexWrap: \"wrap\" }}>\n        <AsyncSelect\n          isMulti={isMulti}\n          loadOptions={getOptions}\n          defaultOptions={defaultOptions}\n          value={selectedOptions}\n          getOptionLabel={getOptionLabel}\n          getOptionValue={getOptionValue}\n          isClearable={false}\n          onChange={(value) => {\n            setTouched(true);\n            setValue(value);\n          }}\n          placeholder={placeholder}\n          /* Hide the multi value container in order to use the select just like a search field */\n          styles={{\n            container: (baseCss) => ({\n              ...baseCss,\n              display: \"inline-block\",\n              flexGrow: 1,\n            }),\n            control: (baseCss) => ({\n              ...baseCss,\n              border: error\n                ? `1px solid ${theme.palette.danger.outlinedBorder}`\n                : baseCss?.border,\n            }),\n          }}\n        />\n      </Box>\n      {hasError && (\n        <FormHelperText sx={{ fontSize: \"sm\" }}>{error}</FormHelperText>\n      )}\n    </FormControl>\n  );\n}\n","import * as Yup from \"yup\";\n\nconst ProductSchema = Yup.object({\n  name: Yup.string().max(100).required(\"Product name is required\"),\n  description: Yup.string().max(500).required(\"Description is required\"),\n  categories: Yup.array().min(1, \"Specify atleast one category\"),\n});\n\nexport default ProductSchema;\n","import { useState } from \"react\";\nimport TextInput from \"../common/fields/TextInput\";\nimport { Form } from \"formik\";\nimport Textarea from \"../common/fields/Textarea\";\nimport { toast } from \"react-toastify\";\nimport RemoteSelect from \"../common/fields/RemoteSelect\";\nimport ProductSchema from \"../../validation-schemas/product/ProductSchema\";\nimport difference from \"../../utils/difference\";\nimport isEmpty from \"../../utils/isEmpty\";\nimport { useLazyGetProductsCategoriesQuery } from \"../../services/productCategories\";\nimport DirtyFormik from \"../common/fields/DirtyFormik\";\nimport useUpdateProduct from \"../../hooks/useUpdateProduct\";\nimport SaveOutlinedIcon from \"@mui/icons-material/SaveOutlined\";\nimport { Stack, Button } from \"@mui/joy\";\n\nexport default function ProductForm({ product }) {\n  const [isDirty, setIsDirty] = useState(false);\n  const [updateProduct, isUpdatingProduct] = useUpdateProduct();\n  const [fetchProductCategories] = useLazyGetProductsCategoriesQuery();\n  return (\n    <DirtyFormik\n      initialValues={{\n        ...product,\n      }}\n      validationSchema={ProductSchema}\n      onSubmit={async (values) => {\n        const updatedValues = difference(product, values);\n        if (!isEmpty(updatedValues)) {\n          await updateProduct(product.id, updatedValues);\n        }\n      }}\n      onDirty={(isDirty) => setIsDirty(isDirty)}\n    >\n      <Form>\n        <TextInput sx={{ marginTop: 3 }} name=\"name\" label=\"Product name\" />\n        <RemoteSelect\n          sx={{ marginTop: 2 }}\n          isMulti={true}\n          name=\"categories\"\n          label=\"Categories\"\n          getOptionLabel={(option) => option.name}\n          getOptionValue={(option) => option.id}\n          getOptions={(inputValue, callback) => {\n            fetchProductCategories()\n              .unwrap()\n              .then(({ data: productCategories }) => {\n                callback(\n                  productCategories.filter(({ name }) =>\n                    name.toLowerCase().includes(inputValue.toLowerCase())\n                  )\n                );\n              })\n              .catch((err) => toast.error(err?.message));\n          }}\n        />\n        <Textarea\n          sx={{ marginTop: 2 }}\n          name=\"description\"\n          label=\"Description\"\n        ></Textarea>\n\n        <Stack\n          direction=\"row\"\n          sx={{\n            marginTop: 2,\n            width: \"100%\",\n          }}\n        >\n          <Button\n            sx={{ flexGrow: 1 }}\n            type=\"reset\"\n            size=\"md\"\n            variant=\"soft\"\n            color=\"success\"\n            disabled={!isDirty || isUpdatingProduct}\n          >\n            Undo Changes\n          </Button>\n          <Button\n            size=\"md\"\n            color=\"success\"\n            variant=\"solid\"\n            startDecorator={<SaveOutlinedIcon />}\n            sx={{ flexGrow: 2, marginLeft: 2 }}\n            type=\"submit\"\n            disabled={!isDirty || isUpdatingProduct}\n            loading={isUpdatingProduct}\n            loadingPosition=\"start\"\n          >\n            Save\n          </Button>\n        </Stack>\n      </Form>\n    </DirtyFormik>\n  );\n}\n","import { toast } from \"react-toastify\";\nimport { useUpdateProductMutation } from \"../services/product\";\nimport parseError from \"../components/common/utils/parse-error\";\n\nexport default function useUpdateProduct() {\n  const [_updateProduct, { isLoading }] = useUpdateProductMutation();\n  async function updateProduct(productId, body) {\n    const bodyCopy = structuredClone(body);\n    const { categories } = bodyCopy;\n    // Format the categories in the structure expected by the API\n    if (!!categories?.length) {\n      bodyCopy[\"categoriesIds\"] = categories.map((category) => category.id);\n      delete bodyCopy[\"categories\"];\n    }\n    const { unwrap } = _updateProduct({ productId, ...bodyCopy });\n    try {\n      const data = await unwrap();\n      toast.success(\"Product updated\");\n      return data;\n    } catch (err) {\n      toast.error(`Product update failed. Reason: ${parseError(err)}`);\n    }\n  }\n\n  return [updateProduct, isLoading];\n}\n","import { useGetProductLearningMaterialQuery } from \"../../services/product\";\nimport YouTubePlayer from \"react-player/youtube\";\nimport Error from \"../common/utils/Error\";\nimport Loading from \"../common/utils/Loading\";\nimport { Sheet, Stack, Typography, Button, Card, CardContent } from \"@mui/joy\";\nimport SchoolOutlinedIcon from \"@mui/icons-material/SchoolOutlined\";\nimport { useLearningModalContext } from \"../ProductDetail/CreateLearningMaterialModal\";\nimport { useDeleteLearningMaterialMutation } from \"../../services/product\";\nimport { toast } from \"react-toastify\";\nimport parseError from \"../common/utils/parse-error\";\n\nfunction LearningMaterial({ item, sx = [] }) {\n  const [_deleteLearningMaterial, { isLoading }] =\n    useDeleteLearningMaterialMutation();\n  const { id, videoUrl, title } = item;\n  async function deleteLearningMaterial() {\n    const { unwrap } = _deleteLearningMaterial(id);\n    try {\n      await unwrap();\n      toast.success(\"Learning material deleted\");\n    } catch (err) {\n      toast.error(parseError(err));\n    }\n  }\n  return (\n    <Card\n      size=\"sm\"\n      sx={[\n        { minWidth: 1, maxWidth: 1, borderRadius: \"lg\" },\n        { ...(Array.isArray(sx) ? sx : [sx]) },\n      ]}\n    >\n      <CardContent orientation=\"horizontal\" sx={{ alignItems: \"center\" }}>\n        <Typography\n          level=\"body-sm\"\n          sx={{\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            whiteSpace: \"nowrap\",\n          }}\n        >\n          {title}\n        </Typography>\n        <Button\n          size=\"sm\"\n          sx={{ borderRadius: 50, marginLeft: \"auto\" }}\n          color=\"danger\"\n          disabled={isLoading}\n          loading={isLoading}\n          loadingPosition=\"start\"\n          onClick={async () => await deleteLearningMaterial()}\n        >\n          Delete\n        </Button>\n      </CardContent>\n      <CardContent>\n        <YouTubePlayer url={videoUrl} width=\"100%\" height={200} />\n      </CardContent>\n    </Card>\n  );\n}\n\nfunction EmptyLearningMaterials() {\n  const [, openLearningModal] = useLearningModalContext();\n  return (\n    <Sheet\n      variant=\"soft\"\n      color=\"neutral\"\n      sx={{\n        minWidth: 1,\n        height: 200,\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        borderRadius: \"lg\",\n      }}\n    >\n      <Stack direction=\"column\" sx={{ alignItems: \"center\" }}>\n        <SchoolOutlinedIcon fontSize=\"xl3\" />\n        <Typography level=\"body-sm\">No Learning Materials</Typography>\n        <Button\n          size=\"sm\"\n          variant=\"soft\"\n          color=\"success\"\n          sx={{ borderRadius: 50, marginTop: 1 }}\n          onClick={() => openLearningModal()}\n        >\n          Upload\n        </Button>\n      </Stack>\n    </Sheet>\n  );\n}\nexport default function LearningMaterialsList({ productId }) {\n  const {\n    data: learningMaterials,\n    isFetching,\n    error: fetchError,\n  } = useGetProductLearningMaterialQuery(productId);\n\n  if (isFetching) return <Loading size=\"sm\" />;\n  if (!!fetchError) return <Error error={fetchError} />;\n\n  if (!!learningMaterials.length) {\n    return (\n      <Stack\n        direction=\"row\"\n        spacing={2}\n        sx={{\n          overflowX: \"scroll\",\n          overflowY: \"hidden\",\n          overflow: \"scroll\",\n          \"&::-webkit-scrollbar\": {\n            display: \"none\",\n          },\n          \"&\": {\n            scrollbarWidth: \"none\",\n            msOverflowStyle: \"none\",\n          },\n        }}\n      >\n        {learningMaterials.map((learningMaterial) => (\n          <LearningMaterial item={learningMaterial} sx={{ flex: \"1 1 auto\" }} />\n        ))}\n      </Stack>\n    );\n  } else {\n    return <EmptyLearningMaterials />;\n  }\n}\n","import {\n  AspectRatio,\n  Avatar,\n  Box,\n  Button,\n  ButtonGroup,\n  Card,\n  CardContent,\n  IconButton,\n  Stack,\n  Typography,\n} from \"@mui/joy\";\nimport ChevronRightOutlinedIcon from \"@mui/icons-material/ChevronRightOutlined\";\nimport DeleteOutlinedIcon from \"@mui/icons-material/DeleteOutlined\";\nimport StarBorderOutlinedIcon from \"@mui/icons-material/StarBorderOutlined\";\nimport { Link as RouterLink, useParams } from \"react-router-dom\";\nimport { useGetProductQuery } from \"../../services/product\";\nimport Loading from \"../common/utils/Loading\";\nimport { useState } from \"react\";\nimport resolvePhotoSrc from \"../../utils/resolve-photo-src\";\nimport toTitleCase from \"../../utils/toTitleCase\";\nimport Error from \"../../components/common/utils/Error\";\nimport useDeleteProduct from \"../../hooks/useDeleteProduct\";\nimport ProductForm from \"./ProductForm\";\nimport PromoteProductModal, {\n  usePromoteProductModalContext,\n} from \"./PromoteProductModal\";\nimport SchoolOutlinedIcon from \"@mui/icons-material/SchoolOutlined\";\nimport LearningMaterialsList from \"../LearningMaterialList/LearningMaterialList\";\nimport CreateLearningMaterialModal, {\n  useLearningModalContext,\n} from \"./CreateLearningMaterialModal\";\n\nexport default function ProductDetail() {\n  const { id: productId } = useParams();\n  const [currentPhoto, setCurrentPhoto] = useState(null);\n  const [, openPromoteModal] = usePromoteProductModalContext();\n  const [, openLearningModal] = useLearningModalContext();\n  const [deleteProduct, isDeletingProduct] = useDeleteProduct();\n  const {\n    data: product,\n    error: productFetchError,\n    isFetching: isFetchingProducts,\n  } = useGetProductQuery(productId);\n\n  if (isFetchingProducts) {\n    return <Loading />;\n  }\n  if (!!productFetchError) {\n    return <Error error={productFetchError} />;\n  }\n\n  if (!!product) {\n    return (\n      <Box\n        sx={{\n          padding: 2,\n          marginBottom: 3,\n          maxWidth: 800,\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          position: \"relative\",\n        }}\n      >\n        <Box\n          sx={{\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            maxWidth: 500,\n          }}\n        >\n          <AspectRatio variant=\"plain\">\n            <img\n              src={currentPhoto || resolvePhotoSrc(product.coverPhoto)}\n              alt={product.name}\n            />\n          </AspectRatio>\n\n          <Stack\n            spacing={2}\n            direction=\"row\"\n            sx={{\n              marginTop: 2,\n              justifyContent: \"center\",\n            }}\n          >\n            {[\n              product.coverPhoto,\n              product.photo1,\n              product.photo2,\n              product.photo3,\n              product.photo4,\n            ].map((photo, index) => (\n              <AspectRatio key={index} sx={{ width: 100, cursor: \"pointer\" }}>\n                <img\n                  src={resolvePhotoSrc(photo)}\n                  alt={product.name}\n                  onClick={() => setCurrentPhoto(resolvePhotoSrc(photo))}\n                />\n              </AspectRatio>\n            ))}\n          </Stack>\n\n          <ButtonGroup\n            variant=\"soft\"\n            color=\"warning\"\n            buttonFlex={1}\n            sx={{ marginTop: 3 }}\n          >\n            <Button\n              disabled={isDeletingProduct}\n              loading={isDeletingProduct}\n              loadingPosition=\"start\"\n              startDecorator={<DeleteOutlinedIcon />}\n              onClick={async () => {\n                await deleteProduct(productId);\n              }}\n            >\n              Delete\n            </Button>\n\n            <Button\n              startDecorator={<StarBorderOutlinedIcon />}\n              disabled={product.isFeatured}\n              onClick={() => openPromoteModal()}\n            >\n              Promote\n            </Button>\n            <Button\n              startDecorator={<SchoolOutlinedIcon />}\n              onClick={() => openLearningModal()}\n            >\n              Upload\n            </Button>\n          </ButtonGroup>\n\n          <Typography level=\"h4\" sx={{ marginTop: 3 }}>\n            {toTitleCase(product.name)}\n          </Typography>\n\n          <Typography sx={{ marginTop: 2 }} level=\"body-md\">\n            Sold by\n          </Typography>\n          <Card>\n            <CardContent orientation=\"horizontal\">\n              <Avatar\n                src={resolvePhotoSrc(product.esco.profilePhoto)}\n                alt={product.esco.name}\n              />\n              <Typography level=\"body-sm\">\n                {toTitleCase(product.esco.name)}\n              </Typography>\n              <IconButton\n                sx={{ marginLeft: \"auto\" }}\n                component={RouterLink}\n                to={`/escos/${product.esco.id}`}\n              >\n                <ChevronRightOutlinedIcon />\n              </IconButton>\n            </CardContent>\n          </Card>\n          <Typography level=\"body-md\" sx={{ marginTop: 3, marginBottom: 1 }}>\n            Learning Materials\n          </Typography>\n          <LearningMaterialsList productId={productId} />\n          <ProductForm product={product} />\n        </Box>\n        <PromoteProductModal product={product} />\n        <CreateLearningMaterialModal product={product} />\n      </Box>\n    );\n  }\n}\n","import { toast } from \"react-toastify\";\nimport { useNavigate } from \"react-router\";\nimport { useDeleteProductMutation } from \"../services/product\";\n\nexport default function useDeleteProduct(redirectTo = \"/products\") {\n  const navigate = useNavigate();\n  const [_deleteProduct, { isLoading }] = useDeleteProductMutation();\n  async function deleteProduct(escoId) {\n    const { unwrap } = _deleteProduct(escoId);\n    try {\n      await unwrap();\n      toast.success(\"Product deleted\");\n      navigate(redirectTo);\n    } catch (err) {\n      toast.error(\"Product deletion failed\");\n    } finally {\n    }\n  }\n\n  return [deleteProduct, isLoading];\n}\n","import { Formik, useFormikContext } from \"formik\";\nimport { useEffect } from \"react\";\n\nfunction IsDirtyForm({ onDirty, children }) {\n  const { dirty: isDirty } = useFormikContext();\n  useEffect(() => {\n    onDirty(isDirty);\n  }, [isDirty, onDirty]);\n  return <>{children}</>;\n}\n\nexport default function DirtyFormik({ children, onDirty, ...props }) {\n  return (\n    <Formik {...props}>\n      <IsDirtyForm onDirty={onDirty}>{children}</IsDirtyForm>\n    </Formik>\n  );\n}\n","const transform = require(\"lodash.transform\");\nconst isEqual = require(\"lodash.isequal\");\nconst isObject = require(\"lodash.isobject\");\n\nconst { isArray } = Array;\n/**\n * Find difference between two objects\n * @param  {object} origObj - Source object to compare newObj against\n * @param  {object} newObj  - New object with potential changes\n * @return {object} differences\n */\nexport default function difference(origObj, newObj) {\n  function changes(newObj, origObj) {\n    return transform(newObj, function (result, value, key) {\n      if (!isEqual(value, origObj[key])) {\n        /* For arrays, the whole changed array is taken instead of picking only \n        the differences between the original array and the changed array */\n        result[key] =\n          isObject(value) &&\n          isObject(origObj[key]) &&\n          !isArray(value) &&\n          !isArray(origObj[key])\n            ? changes(value, origObj[key])\n            : value;\n      }\n    });\n  }\n  return changes(newObj, origObj);\n}\n"],"names":["RemoteSelect","_ref","name","label","defaultOptions","getOptions","getOptionLabel","getOptionValue","isMulti","placeholder","sx","props","theme","useTheme","value","selectedOptions","touched","error","setValue","setTouched","useField","hasError","_jsxs","FormControl","Array","isArray","children","_jsx","FormLabel","Box","display","flexWrap","AsyncSelect","loadOptions","isClearable","onChange","styles","container","baseCss","flexGrow","control","border","palette","danger","outlinedBorder","FormHelperText","fontSize","Yup","max","required","description","categories","min","ProductForm","product","isDirty","setIsDirty","useState","updateProduct","isUpdatingProduct","_updateProduct","isLoading","useUpdateProductMutation","async","productId","body","bodyCopy","structuredClone","length","map","category","id","unwrap","data","toast","success","err","parseError","useUpdateProduct","fetchProductCategories","useLazyGetProductsCategoriesQuery","DirtyFormik","initialValues","validationSchema","ProductSchema","onSubmit","updatedValues","difference","values","isEmpty","onDirty","Form","TextInput","marginTop","option","inputValue","callback","then","_ref2","productCategories","filter","_ref3","toLowerCase","includes","catch","message","Textarea","Stack","direction","width","Button","type","size","variant","color","disabled","startDecorator","SaveOutlinedIcon","marginLeft","loading","loadingPosition","LearningMaterial","item","_deleteLearningMaterial","useDeleteLearningMaterialMutation","videoUrl","title","Card","minWidth","maxWidth","borderRadius","CardContent","orientation","alignItems","Typography","level","overflow","textOverflow","whiteSpace","onClick","deleteLearningMaterial","YouTubePlayer","url","height","EmptyLearningMaterials","openLearningModal","useLearningModalContext","Sheet","justifyContent","SchoolOutlinedIcon","LearningMaterialsList","learningMaterials","isFetching","fetchError","useGetProductLearningMaterialQuery","Loading","Error","spacing","overflowX","overflowY","scrollbarWidth","msOverflowStyle","learningMaterial","flex","ProductDetail","useParams","currentPhoto","setCurrentPhoto","openPromoteModal","usePromoteProductModalContext","deleteProduct","isDeletingProduct","redirectTo","arguments","undefined","navigate","useNavigate","_deleteProduct","useDeleteProductMutation","escoId","useDeleteProduct","productFetchError","isFetchingProducts","useGetProductQuery","padding","marginBottom","marginRight","position","AspectRatio","src","resolvePhotoSrc","coverPhoto","alt","photo1","photo2","photo3","photo4","photo","index","cursor","ButtonGroup","buttonFlex","DeleteOutlinedIcon","StarBorderOutlinedIcon","isFeatured","toTitleCase","Avatar","esco","profilePhoto","IconButton","component","RouterLink","to","ChevronRightOutlinedIcon","PromoteProductModal","CreateLearningMaterialModal","IsDirtyForm","dirty","useFormikContext","useEffect","_Fragment","Formik","transform","require","isEqual","isObject","origObj","newObj","changes","result","key"],"sourceRoot":""}