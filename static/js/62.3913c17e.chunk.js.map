{"version":3,"file":"static/js/62.3913c17e.chunk.js","mappings":"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","sources":["components/FarmerProfile/FarmerProfile.js","hooks/useUpdateFarmer.js","components/common/fields/DirtyFormik.js","utils/difference.js","../node_modules/@mui/icons-material/LockResetOutlined.js","../node_modules/@mui/icons-material/VerifiedOutlined.js"],"sourcesContent":["import {\n  AspectRatio,\n  Avatar,\n  Box,\n  Button,\n  ButtonGroup,\n  Sheet,\n  Stack,\n} from \"@mui/joy\";\nimport VerifiedOutlinedIcon from \"@mui/icons-material/VerifiedOutlined\";\nimport SaveOutlinedIcon from \"@mui/icons-material/SaveOutlined\";\nimport DeleteOutlinedIcon from \"@mui/icons-material/DeleteOutlined\";\nimport LockResetOutlinedIcon from \"@mui/icons-material/LockResetOutlined\";\nimport { useParams } from \"react-router\";\nimport { useGetFarmerQuery } from \"../../services/farmer\";\nimport Loading from \"../common/utils/Loading\";\nimport TextInput from \"../common/fields/TextInput\";\nimport Textarea from \"../common/fields/Textarea\";\nimport { Form } from \"formik\";\nimport DirtyFormik from \"../common/fields/DirtyFormik\";\nimport { useState } from \"react\";\nimport resolvePhotoSrc from \"../../utils/resolve-photo-src\";\nimport CSVChippedSelect from \"../common/fields/CSVChippedSelect\";\nimport { ANIMALS, CROPS } from \"../../constants\";\nimport useDeleteFarmer from \"../../hooks/useDeleteFarmer\";\nimport useUpdateFarmer from \"../../hooks/useUpdateFarmer\";\nimport difference from \"../../utils/difference\";\nimport FarmerProfileSchema from \"../../validation-schemas/farmer/FarmerProfileSchema\";\nimport Error from \"../common/utils/Error\";\n\nexport default function FarmerProfile() {\n  const [isDirty, setIsDirty] = useState(false);\n  const { id: farmerId } = useParams();\n  const { data: farmer, error, isFetching } = useGetFarmerQuery(farmerId);\n  const [deleteFarmer, isDeletingFarmer] = useDeleteFarmer();\n  const [updateFarmer, isUpdatingFarmer] = useUpdateFarmer();\n\n  if (!!error) {\n    return <Error error={error} />;\n  }\n  if (isFetching) {\n    return <Loading />;\n  }\n  if (!!farmer) {\n    return (\n      <Box\n        sx={{\n          padding: 2,\n          marginBottom: 3,\n          maxWidth: 800,\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          position: \"relative\",\n        }}\n      >\n        <Sheet\n          sx={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            borderRadius: \"md\",\n          }}\n          variant=\"soft\"\n          color=\"success\"\n        >\n          <Box sx={{ width: 400, position: \"relative\" }}>\n            <AspectRatio variant=\"plain\">\n              <img\n                src={resolvePhotoSrc(farmer.coverPhoto)}\n                alt={farmer.firstName}\n              />\n            </AspectRatio>\n            <Avatar\n              size=\"lg\"\n              variant=\"solid\"\n              src={resolvePhotoSrc(farmer.profilePhoto)}\n              sx={{\n                position: \"absolute\",\n                left: 10,\n                bottom: -20,\n                boxShadow: \"md\",\n              }}\n            ></Avatar>\n          </Box>\n        </Sheet>\n        <ButtonGroup\n          variant=\"soft\"\n          color=\"warning\"\n          buttonFlex={1}\n          sx={{ marginTop: 4 }}\n        >\n          <Button\n            disabled={isDeletingFarmer}\n            loading={isDeletingFarmer}\n            loadingPosition=\"start\"\n            startDecorator={<DeleteOutlinedIcon />}\n            onClick={async () => await deleteFarmer(farmerId)}\n          >\n            Delete\n          </Button>\n\n          <Button startDecorator={<LockResetOutlinedIcon />}>Reset</Button>\n        </ButtonGroup>\n        <DirtyFormik\n          initialValues={{\n            ...farmer,\n          }}\n          validationSchema={FarmerProfileSchema}\n          onSubmit={async (values) => {\n            const updatedValues = difference(farmer, values);\n            await updateFarmer(farmerId, updatedValues);\n          }}\n          onDirty={(isDirty) => setIsDirty(isDirty)}\n        >\n          <Form>\n            <Box sx={{ marginTop: 4 }}>\n              <Stack direction={{ xs: \"column\", sm: \"row\" }} spacing={2}>\n                <TextInput\n                  sx={{ flexGrow: 1 }}\n                  name=\"firstName\"\n                  label=\"First name\"\n                />\n                <TextInput\n                  sx={{ flexGrow: 1 }}\n                  label=\"Last name\"\n                  name=\"lastName\"\n                />\n              </Stack>\n              <TextInput\n                sx={{ marginTop: 2 }}\n                label=\"Phone number\"\n                name=\"phoneNumber\"\n                endDecorator={\n                  farmer.isVerified ? (\n                    <VerifiedOutlinedIcon color=\"success\" />\n                  ) : (\n                    <Button variant=\"soft\" size=\"sm\" color=\"danger\">\n                      Verify\n                    </Button>\n                  )\n                }\n              />\n\n              <Stack\n                direction={{ xs: \"column\", sm: \"row\" }}\n                spacing={2}\n                sx={{ marginTop: 2 }}\n              >\n                <TextInput\n                  sx={{ flexGrow: 1 }}\n                  label=\"Latitude\"\n                  name=\"latitude\"\n                />\n                <TextInput\n                  sx={{ flexGrow: 1 }}\n                  label=\"Longitude\"\n                  name=\"longitude\"\n                />\n              </Stack>\n\n              <Stack\n                direction={{ xs: \"column\", sm: \"row\" }}\n                spacing={2}\n                sx={{ marginTop: 3 }}\n              >\n                <TextInput\n                  sx={{ flexGrow: 1 }}\n                  label=\"Farm name\"\n                  name=\"farmName\"\n                  value={farmer.farmName}\n                />\n\n                <TextInput\n                  sx={{ flexGrow: 1 }}\n                  label=\"Farm size\"\n                  name=\"farmSize\"\n                />\n\n                <TextInput\n                  sx={{ flexGrow: 1 }}\n                  label=\"Farm date\"\n                  name=\"farmEstablishedOn\"\n                  type=\"date\"\n                />\n              </Stack>\n              <Textarea\n                sx={{ marginTop: 2 }}\n                label=\"Farm description\"\n                name=\"farmDescription\"\n              />\n\n              <CSVChippedSelect\n                options={ANIMALS}\n                sx={{ marginTop: 2 }}\n                label=\"Animals\"\n                name=\"animalsKept\"\n              />\n              <TextInput\n                name=\"animalsPerType\"\n                label=\"For each animal selected, how many animals do you rear?\"\n                placeholder=\"10,15,20\"\n                sx={{ marginBottom: 1 }}\n              />\n\n              <CSVChippedSelect\n                options={CROPS}\n                sx={{ marginTop: 2 }}\n                label=\"Crops\"\n                name=\"cropsGrown\"\n              />\n              <TextInput\n                name=\"acreagePerCrop\"\n                label=\"For each crop selected, how many acres per crop?\"\n                placeholder=\"10,15,20\"\n                sx={{ marginTop: 2 }}\n              />\n\n              <Stack\n                direction=\"row\"\n                sx={{\n                  marginTop: 3,\n                  width: \"100%\",\n                }}\n              >\n                <Button\n                  sx={{ flexGrow: 1 }}\n                  type=\"reset\"\n                  size=\"md\"\n                  variant=\"soft\"\n                  color=\"success\"\n                  disabled={!isDirty || isUpdatingFarmer}\n                >\n                  Undo Changes\n                </Button>\n                <Button\n                  size=\"md\"\n                  color=\"success\"\n                  variant=\"solid\"\n                  startDecorator={<SaveOutlinedIcon />}\n                  sx={{ flexGrow: 2, marginLeft: 2 }}\n                  type=\"submit\"\n                  disabled={!isDirty || isUpdatingFarmer}\n                  loading={isUpdatingFarmer}\n                  loadingPosition=\"start\"\n                >\n                  Save\n                </Button>\n              </Stack>\n            </Box>\n          </Form>\n        </DirtyFormik>\n      </Box>\n    );\n  }\n}\n","import { toast } from \"react-toastify\";\nimport { useUpdateFarmerMutation } from \"../services/farmer\";\nimport parseError from \"../components/common/utils/parse-error\";\n\nexport default function useUpdateFarmer() {\n  const [_updateFarmer, { isLoading }] = useUpdateFarmerMutation();\n  async function updateFarmer(farmerId, body) {\n    const { unwrap } = _updateFarmer({ farmerId, ...body });\n    try {\n      const data = await unwrap();\n      toast.success(\"Farmer updated\");\n      return data;\n    } catch (err) {\n      toast.error(`Farmer update failed. Reason: ${parseError(err)}`);\n    }\n  }\n\n  return [updateFarmer, isLoading];\n}\n","import { Formik, useFormikContext } from \"formik\";\nimport { useEffect } from \"react\";\n\nfunction IsDirtyForm({ onDirty, children }) {\n  const { dirty: isDirty } = useFormikContext();\n  useEffect(() => {\n    onDirty(isDirty);\n  }, [isDirty, onDirty]);\n  return <>{children}</>;\n}\n\nexport default function DirtyFormik({ children, onDirty, ...props }) {\n  return (\n    <Formik {...props}>\n      <IsDirtyForm onDirty={onDirty}>{children}</IsDirtyForm>\n    </Formik>\n  );\n}\n","const transform = require(\"lodash.transform\");\nconst isEqual = require(\"lodash.isequal\");\nconst isObject = require(\"lodash.isobject\");\n\nconst { isArray } = Array;\n/**\n * Find difference between two objects\n * @param  {object} origObj - Source object to compare newObj against\n * @param  {object} newObj  - New object with potential changes\n * @return {object} differences\n */\nexport default function difference(origObj, newObj) {\n  function changes(newObj, origObj) {\n    return transform(newObj, function (result, value, key) {\n      if (!isEqual(value, origObj[key])) {\n        /* For arrays, the whole changed array is taken instead of picking only \n        the differences between the original array and the changed array */\n        result[key] =\n          isObject(value) &&\n          isObject(origObj[key]) &&\n          !isArray(value) &&\n          !isArray(origObj[key])\n            ? changes(value, origObj[key])\n            : value;\n      }\n    });\n  }\n  return changes(newObj, origObj);\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M13 3c-4.97 0-9 4.03-9 9 0 .06.01.12.01.19l-1.84-1.84-1.41 1.41L5 16l4.24-4.24-1.41-1.41-1.82 1.82c0-.06-.01-.11-.01-.17 0-3.86 3.14-7 7-7s7 3.14 7 7-3.14 7-7 7c-1.9 0-3.62-.76-4.88-1.99L6.7 18.42C8.32 20.01 10.55 21 13 21c4.97 0 9-4.03 9-9s-4.03-9-9-9m2 8v-1c0-1.1-.9-2-2-2s-2 .9-2 2v1c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-3c0-.55-.45-1-1-1m-1 0h-2v-1c0-.55.45-1 1-1s1 .45 1 1z\"\n}), 'LockResetOutlined');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M23 11.99 20.56 9.2l.34-3.69-3.61-.82L15.4 1.5 12 2.96 8.6 1.5 6.71 4.69 3.1 5.5l.34 3.7L1 11.99l2.44 2.79-.34 3.7 3.61.82 1.89 3.2 3.4-1.47 3.4 1.46 1.89-3.19 3.61-.82-.34-3.69zm-3.95 1.48-.56.65.08.85.18 1.95-1.9.43-.84.19-.44.74-.99 1.68-1.78-.77-.8-.34-.79.34-1.78.77-.99-1.67-.44-.74-.84-.19-1.9-.43.18-1.96.08-.85-.56-.65L3.67 12l1.29-1.48.56-.65-.09-.86-.18-1.94 1.9-.43.84-.19.44-.74.99-1.68 1.78.77.8.34.79-.34 1.78-.77.99 1.68.44.74.84.19 1.9.43-.18 1.95-.08.85.56.65 1.29 1.47z\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m10.09 13.75-2.32-2.33-1.48 1.49 3.8 3.81 7.34-7.36-1.48-1.49z\"\n}, \"1\")], 'VerifiedOutlined');"],"names":["FarmerProfile","isDirty","setIsDirty","useState","id","farmerId","useParams","data","farmer","error","isFetching","useGetFarmerQuery","deleteFarmer","isDeletingFarmer","useDeleteFarmer","updateFarmer","isUpdatingFarmer","_updateFarmer","isLoading","useUpdateFarmerMutation","async","body","unwrap","toast","success","err","parseError","useUpdateFarmer","_jsx","Error","Loading","_jsxs","Box","sx","padding","marginBottom","maxWidth","marginLeft","marginRight","position","children","Sheet","display","justifyContent","borderRadius","variant","color","width","AspectRatio","src","resolvePhotoSrc","coverPhoto","alt","firstName","Avatar","size","profilePhoto","left","bottom","boxShadow","ButtonGroup","buttonFlex","marginTop","Button","disabled","loading","loadingPosition","startDecorator","DeleteOutlinedIcon","onClick","LockResetOutlinedIcon","DirtyFormik","initialValues","validationSchema","FarmerProfileSchema","onSubmit","updatedValues","difference","values","onDirty","Form","Stack","direction","xs","sm","spacing","TextInput","flexGrow","name","label","endDecorator","isVerified","VerifiedOutlinedIcon","value","farmName","type","Textarea","CSVChippedSelect","options","ANIMALS","placeholder","CROPS","SaveOutlinedIcon","IsDirtyForm","_ref","dirty","useFormikContext","useEffect","_Fragment","_ref2","props","Formik","transform","require","isEqual","isObject","isArray","Array","origObj","newObj","changes","result","key","_interopRequireDefault","exports","_createSvgIcon","_jsxRuntime","default","jsx","d"],"sourceRoot":""}