{"version":3,"file":"static/js/188.9f85d14c.chunk.js","mappings":"wSAUA,SAASA,EAAYC,GAA6B,IAA1BC,UAAU,QAAEC,IAAWF,EAC7C,OAAOG,EAAAA,EAAAA,KAACC,EAAAA,YAAW,CAACF,QAASA,GAC/B,CAEO,SAASG,IACd,MAAQC,GAAIC,IAAaC,EAAAA,EAAAA,MAClBC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,IAE/BC,KAAMC,EAAS,MACfC,EAAK,WACLC,IACEC,EAAAA,EAAAA,IAAkC,CAAET,WAAUE,SAElD,OACEN,EAAAA,EAAAA,KAACc,EAAY,CACXJ,UAAWA,EACXC,MAAOA,EACPC,WAAYA,EACZG,aAAcR,GAGpB,CAEO,SAASS,IACd,MAAQb,GAAIc,IAAYZ,EAAAA,EAAAA,MACjBC,EAAMC,IAAWC,EAAAA,EAAAA,UAAS,IAE/BC,KAAMC,EAAS,MACfC,EAAK,WACLC,IACEM,EAAAA,EAAAA,IAAiC,CAAED,UAASX,SAEhD,OACEN,EAAAA,EAAAA,KAACc,EAAY,CACXJ,UAAWA,EACXC,MAAOA,EACPC,WAAYA,EACZG,aAAcR,GAGpB,CAEA,SAASO,EAAYK,GAKjB,IALkB,UACpBT,EAAS,MACTC,EAAQ,KAAI,WACZC,GAAa,EAAK,aAClBG,EAAgBT,GAASA,GAC1Ba,EACC,OAAIP,GACKZ,EAAAA,EAAAA,KAACoB,EAAAA,EAAO,IAEXT,GACGX,EAAAA,EAAAA,KAACqB,EAAAA,EAAK,CAACV,MAAOA,KAGrBX,EAAAA,EAAAA,KAAAsB,EAAAA,SAAA,CAAAC,UACEvB,EAAAA,EAAAA,KAACwB,EAAAA,EAAiB,CAChBf,KAAMC,EACNe,WAAaC,IAAS1B,EAAAA,EAAAA,KAACJ,EAAY,CAACE,SAAU4B,IAC9CC,YAAaA,KAAM3B,EAAAA,EAAAA,KAAC4B,EAAAA,EAAK,CAAAL,SAAC,uBAC1BR,aAAcA,KAItB,C","sources":["components/InterestList/InterestList.js"],"sourcesContent":["import { useParams } from \"react-router-dom\";\nimport { useGetFarmerFavoriteProductsQuery } from \"../../services/farmer\";\nimport { useState } from \"react\";\nimport Loading from \"../common/utils/Loading\";\nimport Empty from \"../common/utils/Empty\";\nimport Error from \"../common/utils/Error\";\nimport { ProductItem } from \"../ProductList/Product.List\";\nimport PaginatedGridList from \"../common/layouts/PaginatedGridList\";\nimport { useGetGroupFavoriteProductsQuery } from \"../../services/group\";\n\nfunction InterestItem({ interest: { product } }) {\n  return <ProductItem product={product} />;\n}\n\nexport function FarmerInterestList() {\n  const { id: farmerId } = useParams();\n  const [page, setPage] = useState(1);\n  const {\n    data: interests,\n    error,\n    isFetching,\n  } = useGetFarmerFavoriteProductsQuery({ farmerId, page });\n\n  return (\n    <InterestList\n      interests={interests}\n      error={error}\n      isFetching={isFetching}\n      onSelectPage={setPage}\n    />\n  );\n}\n\nexport function GroupInterestList() {\n  const { id: groupId } = useParams();\n  const [page, setPage] = useState(1);\n  const {\n    data: interests,\n    error,\n    isFetching,\n  } = useGetGroupFavoriteProductsQuery({ groupId, page });\n\n  return (\n    <InterestList\n      interests={interests}\n      error={error}\n      isFetching={isFetching}\n      onSelectPage={setPage}\n    />\n  );\n}\n\nfunction InterestList({\n  interests,\n  error = null,\n  isFetching = false,\n  onSelectPage = (page) => page,\n}) {\n  if (isFetching) {\n    return <Loading />;\n  }\n  if (!!error) {\n    return <Error error={error} />;\n  }\n  return (\n    <>\n      <PaginatedGridList\n        data={interests}\n        renderItem={(item) => <InterestItem interest={item} />}\n        renderEmpty={() => <Empty>No interests found</Empty>}\n        onSelectPage={onSelectPage}\n      />\n    </>\n  );\n}\n"],"names":["InterestItem","_ref","interest","product","_jsx","ProductItem","FarmerInterestList","id","farmerId","useParams","page","setPage","useState","data","interests","error","isFetching","useGetFarmerFavoriteProductsQuery","InterestList","onSelectPage","GroupInterestList","groupId","useGetGroupFavoriteProductsQuery","_ref2","Loading","Error","_Fragment","children","PaginatedGridList","renderItem","item","renderEmpty","Empty"],"sourceRoot":""}