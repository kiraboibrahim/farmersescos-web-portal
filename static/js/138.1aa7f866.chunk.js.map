{"version":3,"file":"static/js/138.1aa7f866.chunk.js","mappings":"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","sources":["components/AgroProcessorProfile/AgroProcessorProfile.js","hooks/useUpdateAgroProcessor.js","components/common/fields/DirtyFormik.js","utils/difference.js","../node_modules/@mui/icons-material/LockResetOutlined.js","../node_modules/@mui/icons-material/VerifiedOutlined.js"],"sourcesContent":["import {\n  AspectRatio,\n  Avatar,\n  Box,\n  Button,\n  ButtonGroup,\n  Sheet,\n  Stack,\n} from \"@mui/joy\";\nimport VerifiedOutlinedIcon from \"@mui/icons-material/VerifiedOutlined\";\nimport SaveOutlinedIcon from \"@mui/icons-material/SaveOutlined\";\nimport DeleteOutlinedIcon from \"@mui/icons-material/DeleteOutlined\";\nimport LockResetOutlinedIcon from \"@mui/icons-material/LockResetOutlined\";\nimport { useParams } from \"react-router\";\nimport Loading from \"../common/utils/Loading\";\nimport TextInput from \"../common/fields/TextInput\";\nimport Textarea from \"../common/fields/Textarea\";\nimport { Form } from \"formik\";\nimport DirtyFormik from \"../common/fields/DirtyFormik\";\nimport { useState } from \"react\";\nimport resolvePhotoSrc from \"../../utils/resolve-photo-src\";\nimport CSVChippedSelect from \"../common/fields/CSVChippedSelect\";\nimport useDeleteAgroProcessor from \"../../hooks/useDeleteAgroProcessor\";\nimport useUpdateAgroProcessor from \"../../hooks/useUpdateAgroProcessor\";\nimport difference from \"../../utils/difference\";\nimport Error from \"../common/utils/Error\";\nimport AgroProcessorProfileSchema from \"../../validation-schemas/agroProcessor/AgroProcessorProfileSchema\";\nimport { useGetAgroProcessorQuery } from \"../../services/agroProcessor\";\n\nexport default function AgroProcessorProfile() {\n  const [isDirty, setIsDirty] = useState(false);\n  const { id: agroProcessorId } = useParams();\n  const {\n    data: agroProcessor,\n    error,\n    isFetching,\n  } = useGetAgroProcessorQuery(agroProcessorId);\n  const [deleteAgroProcessor, isDeletingAgroProcessor] =\n    useDeleteAgroProcessor();\n  const [updateAgroProcessor, isUpdatingAgroProcessor] =\n    useUpdateAgroProcessor();\n\n  if (!!error) {\n    return <Error error={error} />;\n  }\n  if (isFetching) {\n    return <Loading />;\n  }\n  if (!!agroProcessor) {\n    return (\n      <Box\n        sx={{\n          padding: 2,\n          marginBottom: 3,\n          maxWidth: 800,\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          position: \"relative\",\n        }}\n      >\n        <Sheet\n          sx={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            borderRadius: \"md\",\n          }}\n          variant=\"soft\"\n          color=\"success\"\n        >\n          <Box sx={{ width: 400, position: \"relative\" }}>\n            <AspectRatio variant=\"plain\">\n              <img\n                src={resolvePhotoSrc(agroProcessor.coverPhoto)}\n                alt={agroProcessor.name}\n              />\n            </AspectRatio>\n            <Avatar\n              size=\"lg\"\n              variant=\"solid\"\n              src={resolvePhotoSrc(agroProcessor.profilePhoto)}\n              sx={{\n                position: \"absolute\",\n                left: 10,\n                bottom: -20,\n                boxShadow: \"md\",\n              }}\n            ></Avatar>\n          </Box>\n        </Sheet>\n        <ButtonGroup\n          variant=\"soft\"\n          color=\"warning\"\n          buttonFlex={1}\n          sx={{ marginTop: 4 }}\n        >\n          <Button\n            disabled={isDeletingAgroProcessor}\n            loading={isDeletingAgroProcessor}\n            loadingPosition=\"start\"\n            startDecorator={<DeleteOutlinedIcon />}\n            onClick={async () => await deleteAgroProcessor(agroProcessorId)}\n          >\n            Delete\n          </Button>\n\n          <Button startDecorator={<LockResetOutlinedIcon />}>Reset</Button>\n        </ButtonGroup>\n        <DirtyFormik\n          initialValues={{\n            ...agroProcessor,\n          }}\n          validationSchema={AgroProcessorProfileSchema}\n          onSubmit={async (values) => {\n            const updatedValues = difference(agroProcessor, values);\n            return await updateAgroProcessor(agroProcessorId, updatedValues);\n          }}\n          onDirty={(isDirty) => setIsDirty(isDirty)}\n        >\n          <Form>\n            <Box sx={{ marginTop: 4 }}>\n              <TextInput sx={{ marginBottom: 2 }} label=\"Name\" name=\"name\" />\n              <TextInput\n                sx={{ marginBottom: 2 }}\n                label=\"Phone number\"\n                name=\"phoneNumber\"\n                endDecorator={\n                  agroProcessor.isVerified ? (\n                    <VerifiedOutlinedIcon color=\"success\" />\n                  ) : (\n                    <Button variant=\"soft\" size=\"sm\" color=\"danger\">\n                      Verify\n                    </Button>\n                  )\n                }\n              />\n\n              <TextInput\n                sx={{ marginBottom: 2 }}\n                label=\"Address\"\n                name=\"address\"\n              />\n              <TextInput\n                sx={{ marginBottom: 2 }}\n                label=\"Website\"\n                name=\"website\"\n              />\n\n              <TextInput\n                sx={{ marginBottom: 2 }}\n                label=\"Incorporation Date\"\n                name=\"incorporationDate\"\n              />\n\n              <CSVChippedSelect\n                sx={{ marginTop: 2 }}\n                label=\"Equipment\"\n                name=\"equipment\"\n                isDynamic={true}\n              />\n\n              <Textarea\n                sx={{ marginTop: 2 }}\n                label=\"Equipment description\"\n                name=\"equipmentDescription\"\n              />\n\n              <Stack\n                direction=\"row\"\n                sx={{\n                  marginTop: 3,\n                  width: \"100%\",\n                }}\n              >\n                <Button\n                  sx={{ flexGrow: 1 }}\n                  type=\"reset\"\n                  size=\"md\"\n                  variant=\"soft\"\n                  color=\"success\"\n                  disabled={!isDirty || isUpdatingAgroProcessor}\n                >\n                  Undo Changes\n                </Button>\n                <Button\n                  size=\"md\"\n                  color=\"success\"\n                  variant=\"solid\"\n                  startDecorator={<SaveOutlinedIcon />}\n                  sx={{ flexGrow: 2, marginLeft: 2 }}\n                  type=\"submit\"\n                  disabled={!isDirty || isUpdatingAgroProcessor}\n                  loading={isUpdatingAgroProcessor}\n                  loadingPosition=\"start\"\n                >\n                  Save\n                </Button>\n              </Stack>\n            </Box>\n          </Form>\n        </DirtyFormik>\n      </Box>\n    );\n  }\n}\n","import { toast } from \"react-toastify\";\nimport parseError from \"../components/common/utils/parse-error\";\nimport { useUpdateAgroProcessorMutation } from \"../services/agroProcessor\";\nexport default function useUpdateAgroProcessor() {\n  const [_updateAgroProcessor, { isLoading }] =\n    useUpdateAgroProcessorMutation();\n  async function updateAgroProcessor(agroProcessorId, body) {\n    const { unwrap } = _updateAgroProcessor({ agroProcessorId, ...body });\n    try {\n      const data = await unwrap();\n      toast.success(\"Agro processor updated\");\n      return data;\n    } catch (err) {\n      toast.error(`Agro processor update failed. Reason: ${parseError(err)}`);\n    }\n  }\n\n  return [updateAgroProcessor, isLoading];\n}\n","import { Formik, useFormikContext } from \"formik\";\nimport { useEffect } from \"react\";\n\nfunction IsDirtyForm({ onDirty, children }) {\n  const { dirty: isDirty } = useFormikContext();\n  useEffect(() => {\n    onDirty(isDirty);\n  }, [isDirty, onDirty]);\n  return <>{children}</>;\n}\n\nexport default function DirtyFormik({ children, onDirty, ...props }) {\n  return (\n    <Formik {...props}>\n      <IsDirtyForm onDirty={onDirty}>{children}</IsDirtyForm>\n    </Formik>\n  );\n}\n","const transform = require(\"lodash.transform\");\nconst isEqual = require(\"lodash.isequal\");\nconst isObject = require(\"lodash.isobject\");\n\nconst { isArray } = Array;\n/**\n * Find difference between two objects\n * @param  {object} origObj - Source object to compare newObj against\n * @param  {object} newObj  - New object with potential changes\n * @return {object} differences\n */\nexport default function difference(origObj, newObj) {\n  function changes(newObj, origObj) {\n    return transform(newObj, function (result, value, key) {\n      if (!isEqual(value, origObj[key])) {\n        /* For arrays, the whole changed array is taken instead of picking only \n        the differences between the original array and the changed array */\n        result[key] =\n          isObject(value) &&\n          isObject(origObj[key]) &&\n          !isArray(value) &&\n          !isArray(origObj[key])\n            ? changes(value, origObj[key])\n            : value;\n      }\n    });\n  }\n  return changes(newObj, origObj);\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M13 3c-4.97 0-9 4.03-9 9 0 .06.01.12.01.19l-1.84-1.84-1.41 1.41L5 16l4.24-4.24-1.41-1.41-1.82 1.82c0-.06-.01-.11-.01-.17 0-3.86 3.14-7 7-7s7 3.14 7 7-3.14 7-7 7c-1.9 0-3.62-.76-4.88-1.99L6.7 18.42C8.32 20.01 10.55 21 13 21c4.97 0 9-4.03 9-9s-4.03-9-9-9m2 8v-1c0-1.1-.9-2-2-2s-2 .9-2 2v1c-.55 0-1 .45-1 1v3c0 .55.45 1 1 1h4c.55 0 1-.45 1-1v-3c0-.55-.45-1-1-1m-1 0h-2v-1c0-.55.45-1 1-1s1 .45 1 1z\"\n}), 'LockResetOutlined');","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M23 11.99 20.56 9.2l.34-3.69-3.61-.82L15.4 1.5 12 2.96 8.6 1.5 6.71 4.69 3.1 5.5l.34 3.7L1 11.99l2.44 2.79-.34 3.7 3.61.82 1.89 3.2 3.4-1.47 3.4 1.46 1.89-3.19 3.61-.82-.34-3.69zm-3.95 1.48-.56.65.08.85.18 1.95-1.9.43-.84.19-.44.74-.99 1.68-1.78-.77-.8-.34-.79.34-1.78.77-.99-1.67-.44-.74-.84-.19-1.9-.43.18-1.96.08-.85-.56-.65L3.67 12l1.29-1.48.56-.65-.09-.86-.18-1.94 1.9-.43.84-.19.44-.74.99-1.68 1.78.77.8.34.79-.34 1.78-.77.99 1.68.44.74.84.19 1.9.43-.18 1.95-.08.85.56.65 1.29 1.47z\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m10.09 13.75-2.32-2.33-1.48 1.49 3.8 3.81 7.34-7.36-1.48-1.49z\"\n}, \"1\")], 'VerifiedOutlined');"],"names":["AgroProcessorProfile","isDirty","setIsDirty","useState","id","agroProcessorId","useParams","data","agroProcessor","error","isFetching","useGetAgroProcessorQuery","deleteAgroProcessor","isDeletingAgroProcessor","useDeleteAgroProcessor","updateAgroProcessor","isUpdatingAgroProcessor","_updateAgroProcessor","isLoading","useUpdateAgroProcessorMutation","async","body","unwrap","toast","success","err","parseError","useUpdateAgroProcessor","_jsx","Error","Loading","_jsxs","Box","sx","padding","marginBottom","maxWidth","marginLeft","marginRight","position","children","Sheet","display","justifyContent","borderRadius","variant","color","width","AspectRatio","src","resolvePhotoSrc","coverPhoto","alt","name","Avatar","size","profilePhoto","left","bottom","boxShadow","ButtonGroup","buttonFlex","marginTop","Button","disabled","loading","loadingPosition","startDecorator","DeleteOutlinedIcon","onClick","LockResetOutlinedIcon","DirtyFormik","initialValues","validationSchema","AgroProcessorProfileSchema","onSubmit","updatedValues","difference","values","onDirty","Form","TextInput","label","endDecorator","isVerified","VerifiedOutlinedIcon","CSVChippedSelect","isDynamic","Textarea","Stack","direction","flexGrow","type","SaveOutlinedIcon","IsDirtyForm","_ref","dirty","useFormikContext","useEffect","_Fragment","_ref2","props","Formik","transform","require","isEqual","isObject","isArray","Array","origObj","newObj","changes","result","value","key","_interopRequireDefault","exports","_createSvgIcon","_jsxRuntime","default","jsx","d"],"sourceRoot":""}