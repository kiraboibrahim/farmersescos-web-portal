{"version":3,"file":"static/js/876.dfb20c41.chunk.js","mappings":"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","sources":["components/common/fields/RemoteSelect.js","validation-schemas/product/ProductSchema.js","components/ProductDetail/ProductForm.js","hooks/useUpdateProduct.js","validation-schemas/product/PromotionSchema.js","components/common/fields/RadioInput.js","components/common/fields/GroupSelect.js","components/PromoteProductForm/PromoteProductForm.js","hooks/usePromoteProduct.js","components/ProductDetail/PromoteProductModal.js","components/ProductDetail/ProductDetail.js","hooks/useModal.js","hooks/useDeleteProduct.js","components/common/fields/DirtyFormik.js","utils/difference.js"],"sourcesContent":["import { FormControl, FormLabel, Box, FormHelperText } from \"@mui/joy\";\nimport AsyncSelect from \"react-select/async\";\nimport { useField } from \"formik\";\nimport { useTheme } from \"@mui/joy/styles\";\n\nexport default function RemoteSelect({\n  name,\n  label,\n  defaultOptions = true,\n  getOptions,\n  getOptionLabel,\n  getOptionValue,\n  isMulti,\n  placeholder,\n  sx,\n  ...props\n}) {\n  const theme = useTheme();\n  const [\n    ,\n    { value: selectedOptions, touched, error },\n    { setValue, setTouched },\n  ] = useField({ name, ...props });\n\n  const hasError = touched && !!error;\n  return (\n    <FormControl sx={Array.isArray(sx) ? sx : [sx]} error={hasError}>\n      <FormLabel>{label}</FormLabel>\n      <Box sx={{ display: \"flex\", flexWrap: \"wrap\" }}>\n        <AsyncSelect\n          isMulti={isMulti}\n          loadOptions={getOptions}\n          defaultOptions={defaultOptions}\n          value={selectedOptions}\n          getOptionLabel={getOptionLabel}\n          getOptionValue={getOptionValue}\n          isClearable={false}\n          onChange={(value) => {\n            setTouched(true);\n            setValue(value);\n          }}\n          placeholder={placeholder}\n          /* Hide the multi value container in order to use the select just like a search field */\n          styles={{\n            container: (baseCss) => ({\n              ...baseCss,\n              display: \"inline-block\",\n              flexGrow: 1,\n            }),\n            control: (baseCss) => ({\n              ...baseCss,\n              border: error\n                ? `1px solid ${theme.palette.danger.outlinedBorder}`\n                : baseCss?.border,\n            }),\n          }}\n        />\n      </Box>\n      {hasError && (\n        <FormHelperText sx={{ fontSize: \"sm\" }}>{error}</FormHelperText>\n      )}\n    </FormControl>\n  );\n}\n","import * as Yup from \"yup\";\n\nconst ProductSchema = Yup.object({\n  name: Yup.string().max(100).required(\"Product name is required\"),\n  description: Yup.string().max(500).required(\"Description is required\"),\n  categories: Yup.array().min(1, \"Specify atleast one category\"),\n});\n\nexport default ProductSchema;\n","import { useState } from \"react\";\nimport TextInput from \"../common/fields/TextInput\";\nimport { Form } from \"formik\";\nimport Textarea from \"../common/fields/Textarea\";\nimport { toast } from \"react-toastify\";\nimport RemoteSelect from \"../common/fields/RemoteSelect\";\nimport ProductSchema from \"../../validation-schemas/product/ProductSchema\";\nimport difference from \"../../utils/difference\";\nimport isEmpty from \"../../utils/isEmpty\";\nimport { useLazyGetProductsCategoriesQuery } from \"../../services/productCategories\";\nimport DirtyFormik from \"../common/fields/DirtyFormik\";\nimport useUpdateProduct from \"../../hooks/useUpdateProduct\";\nimport SaveOutlinedIcon from \"@mui/icons-material/SaveOutlined\";\nimport { Stack, Button } from \"@mui/joy\";\n\nexport default function ProductForm({ product }) {\n  const [isDirty, setIsDirty] = useState(false);\n  const [updateProduct, isUpdatingProduct] = useUpdateProduct();\n  const [fetchProductCategories] = useLazyGetProductsCategoriesQuery();\n  return (\n    <DirtyFormik\n      initialValues={{\n        ...product,\n      }}\n      validationSchema={ProductSchema}\n      onSubmit={async (values) => {\n        const updatedValues = difference(product, values);\n        if (!isEmpty(updatedValues)) {\n          await updateProduct(product.id, updatedValues);\n        }\n      }}\n      onDirty={(isDirty) => setIsDirty(isDirty)}\n    >\n      <Form>\n        <TextInput sx={{ marginTop: 3 }} name=\"name\" label=\"Product name\" />\n        <RemoteSelect\n          sx={{ marginTop: 2 }}\n          isMulti={true}\n          name=\"categories\"\n          label=\"Categories\"\n          getOptionLabel={(option) => option.name}\n          getOptionValue={(option) => option.id}\n          getOptions={(inputValue, callback) => {\n            fetchProductCategories()\n              .unwrap()\n              .then(({ data: productCategories }) => {\n                callback(\n                  productCategories.filter(({ name }) =>\n                    name.toLowerCase().includes(inputValue.toLowerCase())\n                  )\n                );\n              })\n              .catch((err) => toast.error(err?.message));\n          }}\n        />\n        <Textarea\n          sx={{ marginTop: 2 }}\n          name=\"description\"\n          label=\"Description\"\n        ></Textarea>\n\n        <Stack\n          direction=\"row\"\n          sx={{\n            marginTop: 2,\n            width: \"100%\",\n          }}\n        >\n          <Button\n            sx={{ flexGrow: 1 }}\n            type=\"reset\"\n            size=\"md\"\n            variant=\"soft\"\n            color=\"success\"\n            disabled={!isDirty || isUpdatingProduct}\n          >\n            Undo Changes\n          </Button>\n          <Button\n            size=\"md\"\n            color=\"success\"\n            variant=\"solid\"\n            startDecorator={<SaveOutlinedIcon />}\n            sx={{ flexGrow: 2, marginLeft: 2 }}\n            type=\"submit\"\n            disabled={!isDirty || isUpdatingProduct}\n            loading={isUpdatingProduct}\n            loadingPosition=\"start\"\n          >\n            Save\n          </Button>\n        </Stack>\n      </Form>\n    </DirtyFormik>\n  );\n}\n","import { toast } from \"react-toastify\";\nimport { useUpdateProductMutation } from \"../services/product\";\nimport { useState } from \"react\";\nimport parseError from \"../components/common/utils/parse-error\";\n\nexport default function useUpdateProduct() {\n  const [isUpdating, setIsUpdating] = useState(false);\n  const [_updateProduct] = useUpdateProductMutation();\n  async function updateProduct(productId, body) {\n    const bodyCopy = structuredClone(body);\n    const { categories } = bodyCopy;\n    // Format the categories in the structure expected by the API\n    if (!!categories?.length) {\n      bodyCopy[\"categoriesIds\"] = categories.map((category) => category.id);\n      delete bodyCopy[\"categories\"];\n    }\n    const { unwrap } = _updateProduct({ productId, ...bodyCopy });\n    try {\n      setIsUpdating(true);\n      const data = await unwrap();\n      toast.success(\"Product updated\");\n      return data;\n    } catch (err) {\n      toast.error(`Product update failed. Reason: ${parseError(err)}`);\n    } finally {\n      setIsUpdating(false);\n    }\n  }\n\n  return [updateProduct, isUpdating];\n}\n","import * as Yup from \"yup\";\n\nconst PromotionSchema = Yup.object({\n  recipient: Yup.string()\n    .required(\"Choose the recipients of the promotion\")\n    .oneOf([\"ALL_FARMERS\", \"ALL_GROUPS\", \"GROUP\"]),\n  group: Yup.array().when(\"recipient\", {\n    is: \"selectGroup\",\n    then: (schema) => schema.min(1, \"You have to choose a group\"),\n    otherwise: (schema) => schema.nullable(),\n  }),\n  message: Yup.string().required(\"A promotion message is required\"),\n});\n\nexport default PromotionSchema;\n","import {\n  FormControl,\n  FormHelperText,\n  FormLabel,\n  Radio,\n  RadioGroup,\n} from \"@mui/joy\";\nimport { useField, ErrorMessage } from \"formik\";\n\nexport default function RadioInput({\n  name,\n  label,\n  options,\n  sx = [],\n  ...props\n}) {\n  const [{ value }, { error, touched }, { setValue }] = useField({\n    name,\n    ...props,\n  });\n  const hasError = touched && !!error;\n\n  return (\n    <FormControl sx={Array.isArray(sx) ? sx : [sx]} error={hasError}>\n      <FormLabel>{label}</FormLabel>\n      <RadioGroup\n        {...props}\n        name={name}\n        value={value}\n        onChange={({ target }) => setValue(target.value)}\n      >\n        {Object.keys(options).map((key, index) => (\n          <Radio\n            value={key}\n            label={options[key]}\n            key={key}\n            variant=\"soft\"\n            color=\"success\"\n            size=\"sm\"\n          />\n        ))}\n      </RadioGroup>\n      <FormHelperText sx={{ fontSize: \"sm\" }}>\n        <ErrorMessage name={name} />\n      </FormHelperText>\n    </FormControl>\n  );\n}\n","import {\n  Box,\n  IconButton,\n  Input,\n  Stack,\n  AspectRatio,\n  Typography,\n  MenuList,\n  Card,\n  CardContent,\n  FormControl,\n  FormLabel,\n  Chip,\n  ChipDelete,\n  FormHelperText,\n} from \"@mui/joy\";\nimport useDebouncedInput from \"../../../hooks/useDebouncedInput\";\nimport { useCallback, useEffect, useRef, useState } from \"react\";\nimport { styled } from \"@mui/joy/styles\";\nimport { ClickAwayListener, Popper } from \"@mui/material\";\nimport resolvePhotoSrc from \"../../../utils/resolve-photo-src\";\nimport Loading from \"../utils/Loading\";\nimport isEmpty from \"../../../utils/isEmpty\";\nimport Empty from \"../utils/Empty\";\nimport SearchOffOutlinedIcon from \"@mui/icons-material/SearchOffOutlined\";\nimport { useField } from \"formik\";\nimport toTitleCase from \"../../../utils/toTitleCase\";\nimport { useLazyGetGroupsQuery } from \"../../../services/group\";\nimport Error from \"../utils/Error\";\n\nconst Popup = styled(Popper)({\n  zIndex: 1000,\n});\n\nfunction GroupItems({ groups = [], error = null, isLoading, onSelect }) {\n  const isLastGroup = (index) => index === groups.length - 1;\n  return (\n    <Box>\n      <Stack direction=\"column\">\n        {isLoading && <Loading size=\"sm\" />}\n        {!!error && <Error error=\"Something went wrong\" />}\n        {!error &&\n          groups.map((group, index) => (\n            <GroupItem\n              key={index}\n              variant=\"soft\"\n              sx={{\n                marginBottom: !isLastGroup(index) ? 1 : 0,\n                cursor: \"pointer\",\n              }}\n              onSelect={() => onSelect(group)}\n              group={group}\n            />\n          ))}\n        {!groups.length && !isLoading && <Empty>No groups found</Empty>}\n      </Stack>\n    </Box>\n  );\n}\n\nfunction GroupItem({ group, sx = [], onSelect }) {\n  return (\n    <Card variant=\"soft\" sx={Array.isArray(sx) ? sx : [sx]} onClick={onSelect}>\n      <CardContent orientation=\"horizontal\">\n        <AspectRatio sx={{ width: 70, flex: \"0 0 auto\" }}>\n          <img\n            src={resolvePhotoSrc(group.profilePhoto)}\n            alt={`${group.name}`}\n          />\n        </AspectRatio>\n        <Typography\n          sx={{\n            display: \"inline-block\",\n            overflow: \"hidden\",\n            textOverflow: \"ellipsis\",\n            whiteSpace: \"nowrap\",\n          }}\n          level=\"body-sm\"\n        >\n          {toTitleCase(group.name)}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default function GroupSelect({ name, label, sx = [], ...props }) {\n  const isMounted = useRef(true);\n\n  const [, { value: selectedGroups, touched, error }, { setValue }] = useField({\n    name,\n    ...props,\n  });\n  const { multiple } = props;\n  const hasError = touched && !!error;\n  const inputRef = useRef(null);\n  const [groups, setGroups] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [debouncedQuery, unDebouncedQuery, setQuery] = useDebouncedInput({\n    defaultValue: \"\",\n  });\n  const [fetchGroups, { isFetching: isFetchingGroups }] =\n    useLazyGetGroupsQuery();\n\n  function handleSearchClear() {\n    setQuery(\"\");\n    handlePopupClose();\n  }\n\n  function handleChange({ target }) {\n    setQuery(target.value);\n    setIsOpen(target.value.trim() !== \"\");\n  }\n\n  function handleFocus({ target }) {\n    if (!isEmpty(target.value.trim())) {\n      setQuery(target.value);\n      setIsOpen(true);\n    }\n  }\n\n  function handlePopupClose() {\n    setIsOpen(false);\n  }\n  const getSelectedGroups = useCallback(() => {\n    return selectedGroups || [];\n  }, [selectedGroups]);\n\n  const isGroupSelected = useCallback(\n    (group) => {\n      return getSelectedGroups().find(\n        (selectedGroup) => selectedGroup.id === group.id\n      );\n    },\n    [getSelectedGroups]\n  );\n\n  function selectGroup(group) {\n    const _isGroupSelected = isGroupSelected(group);\n    if (_isGroupSelected) return;\n    !!multiple ? setValue([...getSelectedGroups(), group]) : setValue([group]);\n  }\n  function unSelectGroup(group) {\n    if (!isGroupSelected(group)) return;\n    setValue(\n      getSelectedGroups().filter(\n        (selectedGroup) => selectedGroup.id !== group.id\n      )\n    );\n  }\n  useEffect(() => {\n    isMounted.current = true;\n    const { unwrap, abort } = fetchGroups({ search: debouncedQuery });\n    unwrap().then(({ data: groups }) => {\n      if (!isMounted.current) {\n        abort();\n        return;\n      }\n      setGroups(groups.filter((group) => !isGroupSelected(group)));\n    });\n    return () => (isMounted.current = false);\n  }, [debouncedQuery, fetchGroups, isGroupSelected]);\n\n  return (\n    <FormControl sx={Array.isArray(sx) ? sx : [sx]} error={hasError}>\n      <ClickAwayListener onClickAway={handlePopupClose}>\n        <Box>\n          <FormLabel>{label}</FormLabel>\n          <Input\n            ref={inputRef}\n            onChange={handleChange}\n            onFocus={handleFocus}\n            placeholder=\"Search groups\"\n            value={unDebouncedQuery}\n            endDecorator={\n              !isEmpty(unDebouncedQuery) && (\n                <IconButton size=\"sm\" onClick={handleSearchClear}>\n                  <SearchOffOutlinedIcon />\n                </IconButton>\n              )\n            }\n            {...props}\n          />\n\n          <Popup\n            open={isOpen}\n            anchorEl={inputRef.current}\n            disablePortal={true}\n            modifiers={[\n              {\n                name: \"offset\",\n                options: {\n                  offset: [0, 4],\n                },\n              },\n            ]}\n          >\n            <MenuList\n              sx={{\n                padding: 1,\n                maxHeight: 350,\n                overflowY: \"auto\",\n                overflowX: \"hidden\",\n                width: 290,\n              }}\n            >\n              <GroupItems\n                groups={groups}\n                isLoading={isFetchingGroups}\n                onSelect={selectGroup}\n              />\n            </MenuList>\n          </Popup>\n        </Box>\n      </ClickAwayListener>\n\n      {hasError && <FormHelperText>{error}</FormHelperText>}\n      <Box sx={{ marginTop: 2 }}>\n        {getSelectedGroups().map((group, index) => {\n          return (\n            <Chip\n              key={index}\n              color=\"success\"\n              size=\"lg\"\n              sx={{ marginRight: 2 }}\n              endDecorator={<ChipDelete onClick={() => unSelectGroup(group)} />}\n            >\n              {toTitleCase(group.name)}\n            </Chip>\n          );\n        })}\n      </Box>\n    </FormControl>\n  );\n}\n","import {\n  Avatar,\n  Box,\n  Typography,\n  Card,\n  CardContent,\n  Chip,\n  Button,\n} from \"@mui/joy\";\nimport { Form, Formik, useFormikContext } from \"formik\";\nimport PromotionSchema from \"../../validation-schemas/product/PromotionSchema\";\nimport resolvePhotoSrc from \"../../utils/resolve-photo-src\";\nimport toTitleCase from \"../../utils/toTitleCase\";\nimport RadioInput from \"../common/fields/RadioInput\";\nimport Textarea from \"../common/fields/Textarea\";\nimport GroupSelect from \"../common/fields/GroupSelect\";\nimport usePromoteProduct from \"../../hooks/usePromoteProduct\";\n\nexport default function PromoteProductForm({ product }) {\n  const [promoteProduct, isPromotingProduct] = usePromoteProduct(product);\n  return (\n    <Box>\n      <Card\n        variant=\"soft\"\n        orientation=\"horizontal\"\n        sx={{ marginBottom: 3, overflow: \"hidden\" }}\n      >\n        <CardContent orientation=\"horizontal\">\n          <Avatar size=\"lg\" src={resolvePhotoSrc(product.coverPhoto)}>\n            {product.name}\n          </Avatar>\n          <Box>\n            <Typography level=\"h3\">{toTitleCase(product.name)}</Typography>\n\n            <Box level=\"body-xs\" sx={{ marginTop: 1 }}>\n              {product.categories.map(({ name }, index) => (\n                <Chip\n                  size=\"sm\"\n                  key={index}\n                  color=\"success\"\n                  sx={{ marginRight: 1, overflow: \"scroll\" }}\n                >\n                  {name}\n                </Chip>\n              ))}\n            </Box>\n          </Box>\n        </CardContent>\n      </Card>\n\n      <Formik\n        validationSchema={PromotionSchema}\n        initialValues={{\n          recipient: \"\",\n          group: null,\n          message: \"\",\n        }}\n        onSubmit={async (values) => {\n          await promoteProduct(product.id, values);\n        }}\n      >\n        <Form>\n          <RadioInput\n            name=\"recipient\"\n            label=\"Send promotion to\"\n            options={{\n              ALL_FARMERS: \"All farmers\",\n              ALL_GROUPS: \"All groups\",\n              GROUP: \"Select group\",\n            }}\n            sx={{ marginBottom: 1 }}\n          ></RadioInput>\n          <DependentGroupSelect />\n          <Textarea name=\"message\" label=\"Message\" sx={{ marginTop: 2 }} />\n          <Button\n            type=\"submit\"\n            sx={{ marginTop: 2, borderRadius: \"lg\", width: \"100%\" }}\n            color=\"success\"\n            loadingPosition=\"start\"\n            loading={isPromotingProduct}\n            disabled={isPromotingProduct}\n          >\n            Promote\n          </Button>\n        </Form>\n      </Formik>\n    </Box>\n  );\n}\n\nfunction DependentGroupSelect() {\n  const {\n    values: { recipient },\n  } = useFormikContext();\n\n  return recipient === \"GROUP\" ? <GroupSelect name=\"group\" label=\"\" /> : <></>;\n}\n","import { toast } from \"react-toastify\";\nimport { useState } from \"react\";\nimport parseError from \"../components/common/utils/parse-error\";\nimport { usePromoteProductMutation } from \"../services/product\";\n\nexport default function usePromoteProduct() {\n  const [isPromoting, setIsPromoting] = useState(false);\n  const [_promoteProduct] = usePromoteProductMutation();\n  async function promoteProduct(productId, body) {\n    const { recipient, group } = body;\n    const bodyCopy = structuredClone(body);\n    if (recipient === \"GROUP\") {\n      bodyCopy[\"groupId\"] = group.at(0).id;\n      delete bodyCopy[\"group\"];\n    }\n    const { unwrap } = _promoteProduct({ productId, ...bodyCopy });\n    try {\n      setIsPromoting(true);\n      const data = await unwrap();\n      toast.success(\"Product promoted\");\n      return data;\n    } catch (err) {\n      toast.error(`Product promotion failed. Reason: ${parseError(err)}`);\n    } finally {\n      setIsPromoting(false);\n    }\n  }\n\n  return [promoteProduct, isPromoting];\n}\n","import {\n  Modal,\n  ModalClose,\n  ModalDialog,\n  DialogTitle,\n  ModalOverflow,\n} from \"@mui/joy\";\nimport PromoteProductForm from \"../PromoteProductForm/PromoteProductForm\";\n\nexport default function PromoteProductModal({ isOpen, onClose, product }) {\n  return (\n    <Modal open={isOpen} onClose={onClose} size=\"lg\">\n      <ModalOverflow>\n        <ModalDialog sx={{ width: 500, maxWidth: \"95vw\" }}>\n          <ModalClose />\n          <DialogTitle>Promote Prouct</DialogTitle>\n          <PromoteProductForm product={product} />\n        </ModalDialog>\n      </ModalOverflow>\n    </Modal>\n  );\n}\n","import {\n  AspectRatio,\n  Avatar,\n  Box,\n  Button,\n  ButtonGroup,\n  Card,\n  CardContent,\n  IconButton,\n  Stack,\n  Typography,\n} from \"@mui/joy\";\nimport ChevronRightOutlinedIcon from \"@mui/icons-material/ChevronRightOutlined\";\nimport DeleteOutlinedIcon from \"@mui/icons-material/DeleteOutlined\";\nimport StarBorderOutlinedIcon from \"@mui/icons-material/StarBorderOutlined\";\nimport { Link as RouterLink, useParams } from \"react-router-dom\";\nimport { useGetProductQuery } from \"../../services/product\";\nimport Loading from \"../common/utils/Loading\";\nimport { useState } from \"react\";\nimport resolvePhotoSrc from \"../../utils/resolve-photo-src\";\nimport toTitleCase from \"../../utils/toTitleCase\";\nimport Error from \"../../components/common/utils/Error\";\nimport useDeleteProduct from \"../../hooks/useDeleteProduct\";\nimport ProductForm from \"./ProductForm\";\nimport PromoteProductModal from \"./PromoteProductModal\";\nimport useModal from \"../../hooks/useModal\";\n\nexport default function ProductDetail() {\n  const { id: productId } = useParams();\n  const [currentPhoto, setCurrentPhoto] = useState(null);\n  const [isPromoteModalOpen, openPromoteModal, closePromoteModal] = useModal();\n  const [deleteProduct, isDeletingProduct] = useDeleteProduct();\n  const {\n    data: product,\n    error: productFetchError,\n    isFetching: isFetchingProducts,\n  } = useGetProductQuery(productId);\n\n  if (isFetchingProducts) {\n    return <Loading />;\n  }\n  if (!!productFetchError) {\n    return <Error error={productFetchError} />;\n  }\n\n  if (!!product) {\n    return (\n      <Box\n        sx={{\n          padding: 2,\n          marginBottom: 3,\n          maxWidth: 800,\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          position: \"relative\",\n        }}\n      >\n        <Box\n          sx={{\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            maxWidth: 500,\n          }}\n        >\n          <AspectRatio variant=\"plain\">\n            <img\n              src={currentPhoto || resolvePhotoSrc(product.coverPhoto)}\n              alt={product.name}\n            />\n          </AspectRatio>\n\n          <Stack\n            spacing={2}\n            direction=\"row\"\n            sx={{\n              marginTop: 2,\n              justifyContent: \"center\",\n            }}\n          >\n            {[\n              product.coverPhoto,\n              product.photo1,\n              product.photo2,\n              product.photo3,\n              product.photo4,\n            ].map((photo, index) => (\n              <AspectRatio key={index} sx={{ width: 100, cursor: \"pointer\" }}>\n                <img\n                  src={resolvePhotoSrc(photo)}\n                  alt={product.name}\n                  onClick={() => setCurrentPhoto(resolvePhotoSrc(photo))}\n                />\n              </AspectRatio>\n            ))}\n          </Stack>\n\n          <ButtonGroup\n            variant=\"soft\"\n            color=\"warning\"\n            buttonFlex={1}\n            sx={{ marginTop: 3 }}\n          >\n            <Button\n              disabled={isDeletingProduct}\n              loading={isDeletingProduct}\n              loadingPosition=\"start\"\n              startDecorator={<DeleteOutlinedIcon />}\n              onClick={async () => {\n                await deleteProduct(productId);\n              }}\n            >\n              Delete\n            </Button>\n\n            <Button\n              startDecorator={<StarBorderOutlinedIcon />}\n              disabled={product.isFeatured}\n              onClick={() => openPromoteModal()}\n            >\n              Promote\n            </Button>\n          </ButtonGroup>\n\n          <Typography level=\"h4\" sx={{ marginTop: 3 }}>\n            {toTitleCase(product.name)}\n          </Typography>\n          <Typography sx={{ marginTop: 2 }} level=\"body-md\">\n            Sold by\n          </Typography>\n          <Card>\n            <CardContent orientation=\"horizontal\">\n              <Avatar\n                src={resolvePhotoSrc(product.esco.profilePhoto)}\n                alt={product.esco.name}\n              />\n              <Typography level=\"body-sm\">\n                {toTitleCase(product.esco.name)}\n              </Typography>\n              <IconButton\n                sx={{ marginLeft: \"auto\" }}\n                component={RouterLink}\n                to={`/escos/${product.esco.id}`}\n              >\n                <ChevronRightOutlinedIcon />\n              </IconButton>\n            </CardContent>\n          </Card>\n          <ProductForm product={product} />\n        </Box>\n        <PromoteProductModal\n          product={product}\n          isOpen={isPromoteModalOpen}\n          onClose={closePromoteModal}\n        />\n      </Box>\n    );\n  }\n}\n","import { useState } from \"react\";\n\nexport default function useModal() {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  function openModal() {\n    setIsModalOpen(true);\n  }\n\n  function closeModal() {\n    setIsModalOpen(false);\n  }\n  return [isModalOpen, openModal, closeModal];\n}\n","import { toast } from \"react-toastify\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router\";\nimport { useDeleteProductMutation } from \"../services/product\";\n\nexport default function useDeleteProduct(redirectTo = \"/products\") {\n  const [isDeleting, setIsDeleting] = useState(false);\n  const navigate = useNavigate();\n  const [_deleteProduct] = useDeleteProductMutation();\n  async function deleteProduct(escoId) {\n    const { unwrap } = _deleteProduct(escoId);\n    try {\n      setIsDeleting(true);\n      await unwrap();\n      toast.success(\"Product deleted\");\n      navigate(redirectTo);\n    } catch (err) {\n      toast.error(\"Product deletion failed\");\n    } finally {\n      setIsDeleting(false);\n    }\n  }\n\n  return [deleteProduct, isDeleting];\n}\n","import { Formik, useFormikContext } from \"formik\";\nimport { useEffect } from \"react\";\n\nfunction IsDirtyForm({ onDirty, children }) {\n  const { dirty: isDirty } = useFormikContext();\n  useEffect(() => {\n    onDirty(isDirty);\n  }, [isDirty, onDirty]);\n  return <>{children}</>;\n}\n\nexport default function DirtyFormik({ children, onDirty, ...props }) {\n  return (\n    <Formik {...props}>\n      <IsDirtyForm onDirty={onDirty}>{children}</IsDirtyForm>\n    </Formik>\n  );\n}\n","const transform = require(\"lodash.transform\");\nconst isEqual = require(\"lodash.isequal\");\nconst isObject = require(\"lodash.isobject\");\n\nconst { isArray } = Array;\n/**\n * Find difference between two objects\n * @param  {object} origObj - Source object to compare newObj against\n * @param  {object} newObj  - New object with potential changes\n * @return {object} differences\n */\nexport default function difference(origObj, newObj) {\n  function changes(newObj, origObj) {\n    return transform(newObj, function (result, value, key) {\n      if (!isEqual(value, origObj[key])) {\n        /* For arrays, the whole changed array is taken instead of picking only \n        the differences between the original array and the changed array */\n        result[key] =\n          isObject(value) &&\n          isObject(origObj[key]) &&\n          !isArray(value) &&\n          !isArray(origObj[key])\n            ? changes(value, origObj[key])\n            : value;\n      }\n    });\n  }\n  return changes(newObj, origObj);\n}\n"],"names":["RemoteSelect","_ref","name","label","defaultOptions","getOptions","getOptionLabel","getOptionValue","isMulti","placeholder","sx","props","theme","useTheme","value","selectedOptions","touched","error","setValue","setTouched","useField","hasError","_jsxs","FormControl","Array","isArray","children","_jsx","FormLabel","Box","display","flexWrap","AsyncSelect","loadOptions","isClearable","onChange","styles","container","baseCss","flexGrow","control","border","palette","danger","outlinedBorder","FormHelperText","fontSize","Yup","max","required","description","categories","min","ProductForm","product","isDirty","setIsDirty","useState","updateProduct","isUpdatingProduct","isUpdating","setIsUpdating","_updateProduct","useUpdateProductMutation","async","productId","body","bodyCopy","structuredClone","length","map","category","id","unwrap","data","toast","success","err","parseError","useUpdateProduct","fetchProductCategories","useLazyGetProductsCategoriesQuery","DirtyFormik","initialValues","validationSchema","ProductSchema","onSubmit","updatedValues","difference","values","isEmpty","onDirty","Form","TextInput","marginTop","option","inputValue","callback","then","_ref2","productCategories","filter","_ref3","toLowerCase","includes","catch","message","Textarea","Stack","direction","width","Button","type","size","variant","color","disabled","startDecorator","SaveOutlinedIcon","marginLeft","loading","loadingPosition","recipient","oneOf","group","when","is","schema","otherwise","nullable","RadioInput","options","RadioGroup","target","Object","keys","key","index","Radio","ErrorMessage","Popup","styled","Popper","zIndex","GroupItems","groups","isLoading","onSelect","isLastGroup","Loading","Error","GroupItem","marginBottom","cursor","Empty","Card","onClick","CardContent","orientation","AspectRatio","flex","src","resolvePhotoSrc","profilePhoto","alt","Typography","overflow","textOverflow","whiteSpace","level","toTitleCase","GroupSelect","isMounted","useRef","selectedGroups","multiple","inputRef","setGroups","isOpen","setIsOpen","debouncedQuery","unDebouncedQuery","setQuery","useDebouncedInput","defaultValue","fetchGroups","isFetching","isFetchingGroups","useLazyGetGroupsQuery","handlePopupClose","getSelectedGroups","useCallback","isGroupSelected","find","selectedGroup","useEffect","current","abort","search","_ref6","ClickAwayListener","onClickAway","Input","ref","_ref4","trim","onFocus","_ref5","endDecorator","IconButton","SearchOffOutlinedIcon","open","anchorEl","disablePortal","modifiers","offset","MenuList","padding","maxHeight","overflowY","overflowX","Chip","marginRight","ChipDelete","unSelectGroup","PromoteProductForm","promoteProduct","isPromotingProduct","isPromoting","setIsPromoting","_promoteProduct","usePromoteProductMutation","at","usePromoteProduct","Avatar","coverPhoto","Formik","PromotionSchema","ALL_FARMERS","ALL_GROUPS","GROUP","DependentGroupSelect","borderRadius","useFormikContext","_Fragment","PromoteProductModal","onClose","Modal","ModalOverflow","ModalDialog","maxWidth","ModalClose","DialogTitle","ProductDetail","useParams","currentPhoto","setCurrentPhoto","isPromoteModalOpen","openPromoteModal","closePromoteModal","isModalOpen","setIsModalOpen","useModal","deleteProduct","isDeletingProduct","redirectTo","arguments","undefined","isDeleting","setIsDeleting","navigate","useNavigate","_deleteProduct","useDeleteProductMutation","escoId","useDeleteProduct","productFetchError","isFetchingProducts","useGetProductQuery","position","spacing","justifyContent","photo1","photo2","photo3","photo4","photo","ButtonGroup","buttonFlex","DeleteOutlinedIcon","StarBorderOutlinedIcon","isFeatured","esco","component","RouterLink","to","ChevronRightOutlinedIcon","IsDirtyForm","dirty","transform","require","isEqual","isObject","origObj","newObj","changes","result"],"sourceRoot":""}