{"version":3,"file":"static/js/940.d4380824.chunk.js","mappings":"8SAee,SAASA,IACtB,MAAQC,GAAIC,IAAaC,EAAAA,EAAAA,MACjBC,KAAMC,EAAM,MAAEC,EAAK,WAAEC,IAAeC,EAAAA,EAAAA,IAAkBN,GAC9D,OAAMI,GACGG,EAAAA,EAAAA,KAACC,EAAAA,EAAK,CAACJ,MAAOA,IAEnBC,GACKE,EAAAA,EAAAA,KAACE,EAAAA,EAAO,IAGXN,GAEFO,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEL,EAAAA,EAAAA,KAACM,EAAAA,EAAI,CAACC,YAAY,aAAaC,GAAI,CAAEC,aAAc,GAAIJ,UACrDF,EAAAA,EAAAA,MAACO,EAAAA,EAAW,CAACH,YAAY,aAAYF,SAAA,EACnCL,EAAAA,EAAAA,KAACW,EAAAA,EAAM,CAACC,KAAK,KAAKC,KAAKC,EAAAA,EAAAA,GAAgBlB,EAAOmB,cAAcV,SACzDT,EAAOoB,YAEVb,EAAAA,EAAAA,MAACc,EAAAA,EAAG,CAAAZ,SAAA,EACFL,EAAAA,EAAAA,KAACkB,EAAAA,GAAU,CAACC,MAAM,KAAId,SAAE,GAAGT,EAAOwB,aAAaxB,EAAOoB,cAEtDhB,EAAAA,EAAAA,KAACiB,EAAAA,EAAG,CAACE,MAAM,UAAUX,GAAI,CAAEa,UAAW,GAAIhB,SACvCT,EAAO0B,WAAWC,MAAM,KAAKC,KAAI,CAACC,EAAMC,KACvC1B,EAAAA,EAAAA,KAAC2B,EAAAA,EAAI,CACHf,KAAK,KAELgB,MAAM,UACNpB,GAAI,CAAEqB,YAAa,GAAIxB,SAEtBoB,GAJIC,QAQX1B,EAAAA,EAAAA,KAACkB,EAAAA,GAAU,CAACV,GAAI,CAAEa,UAAW,GAAKF,MAAM,UAASd,SAC9CT,EAAOkC,2BAMhB3B,EAAAA,EAAAA,MAAC4B,EAAAA,EAAK,CACJC,UAAU,MACVxB,GAAI,CACFyB,SAAU,SACV,uBAAwB,CACtBC,QAAS,QAEX,IAAK,CACHC,eAAgB,OAChBC,gBAAiB,SAEnB/B,SAAA,EAEFL,EAAAA,EAAAA,KAAC2B,EAAAA,EAAI,CACHU,UAAWC,EAAAA,GACXC,GAAI,YAAY3C,EAAOJ,aACvBgB,GAAI,CAAEqB,YAAa,GACnBjB,KAAK,KAAIP,SACV,aAGDL,EAAAA,EAAAA,KAAC2B,EAAAA,EAAI,CACHU,UAAWC,EAAAA,GACXC,GAAI,YAAY3C,EAAOJ,eACvBgB,GAAI,CAAEqB,YAAa,GACnBjB,KAAK,KAAIP,SACV,eAGDL,EAAAA,EAAAA,KAAC2B,EAAAA,EAAI,CACHU,UAAWC,EAAAA,GACXC,GAAI,YAAY3C,EAAOJ,YACvBgB,GAAI,CAAEqB,YAAa,GACnBjB,KAAK,KAAIP,SACV,YAGDL,EAAAA,EAAAA,KAAC2B,EAAAA,EAAI,CACHU,UAAWC,EAAAA,GACXC,GAAI,YAAY3C,EAAOJ,mBACvBgB,GAAI,CAAEqB,YAAa,GACnBjB,KAAK,KAAIP,SACV,mBAGDL,EAAAA,EAAAA,KAAC2B,EAAAA,EAAI,CACHU,UAAWC,EAAAA,GACXC,GAAI,YAAY3C,EAAOJ,qBACvBoB,KAAK,KAAIP,SACV,wBAIHL,EAAAA,EAAAA,KAACiB,EAAAA,EAAG,CAACT,GAAI,CAAEa,UAAW,EAAGmB,QAAS,CAAEC,GAAI,EAAGC,GAAI,IAAMrC,UACnDL,EAAAA,EAAAA,KAAC2C,EAAAA,GAAM,cApFf,CAyFF,C","sources":["components/FarmerDetail/FarmerDetail.js"],"sourcesContent":["import {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Chip,\n  Stack,\n  Typography,\n} from \"@mui/joy\";\nimport { NavLink as RouterLink, Outlet, useParams } from \"react-router-dom\";\nimport { useGetFarmerQuery } from \"../../services/farmer\";\nimport Loading from \"../common/utils/Loading\";\nimport Error from \"../common/utils/Error\";\nimport resolvePhotoSrc from \"../../utils/resolve-photo-src\";\n\nexport default function FarmerDetail() {\n  const { id: farmerId } = useParams();\n  const { data: farmer, error, isFetching } = useGetFarmerQuery(farmerId);\n  if (!!error) {\n    return <Error error={error} />;\n  }\n  if (isFetching) {\n    return <Loading />;\n  }\n\n  if (!!farmer) {\n    return (\n      <>\n        <Card orientation=\"horizontal\" sx={{ marginBottom: 5 }}>\n          <CardContent orientation=\"horizontal\">\n            <Avatar size=\"lg\" src={resolvePhotoSrc(farmer.profilePhoto)}>\n              {farmer.lastName}\n            </Avatar>\n            <Box>\n              <Typography level=\"h3\">{`${farmer.firstName} ${farmer.lastName}`}</Typography>\n\n              <Box level=\"body-xs\" sx={{ marginTop: 1 }}>\n                {farmer.cropsGrown.split(\",\").map((crop, index) => (\n                  <Chip\n                    size=\"sm\"\n                    key={index}\n                    color=\"success\"\n                    sx={{ marginRight: 1 }}\n                  >\n                    {crop}\n                  </Chip>\n                ))}\n              </Box>\n              <Typography sx={{ marginTop: 1 }} level=\"body-sm\">\n                {farmer.farmDescription}\n              </Typography>\n            </Box>\n          </CardContent>\n        </Card>\n\n        <Stack\n          direction=\"row\"\n          sx={{\n            overflow: \"scroll\",\n            \"&::-webkit-scrollbar\": {\n              display: \"none\",\n            },\n            \"&\": {\n              scrollbarWidth: \"none\",\n              msOverflowStyle: \"none\",\n            },\n          }}\n        >\n          <Chip\n            component={RouterLink}\n            to={`/farmers/${farmer.id}/profile`}\n            sx={{ marginRight: 5 }}\n            size=\"md\"\n          >\n            Profile\n          </Chip>\n          <Chip\n            component={RouterLink}\n            to={`/farmers/${farmer.id}/interests`}\n            sx={{ marginRight: 5 }}\n            size=\"md\"\n          >\n            Interests\n          </Chip>\n          <Chip\n            component={RouterLink}\n            to={`/farmers/${farmer.id}/offers`}\n            sx={{ marginRight: 5 }}\n            size=\"md\"\n          >\n            Offers\n          </Chip>\n          <Chip\n            component={RouterLink}\n            to={`/farmers/${farmer.id}/installations`}\n            sx={{ marginRight: 5 }}\n            size=\"md\"\n          >\n            Installations\n          </Chip>\n          <Chip\n            component={RouterLink}\n            to={`/farmers/${farmer.id}/recommendations`}\n            size=\"md\"\n          >\n            Recommendations\n          </Chip>\n        </Stack>\n        <Box sx={{ marginTop: 3, padding: { xs: 1, sm: 2 } }}>\n          <Outlet />\n        </Box>\n      </>\n    );\n  }\n}\n"],"names":["FarmerDetail","id","farmerId","useParams","data","farmer","error","isFetching","useGetFarmerQuery","_jsx","Error","Loading","_jsxs","_Fragment","children","Card","orientation","sx","marginBottom","CardContent","Avatar","size","src","resolvePhotoSrc","profilePhoto","lastName","Box","Typography","level","firstName","marginTop","cropsGrown","split","map","crop","index","Chip","color","marginRight","farmDescription","Stack","direction","overflow","display","scrollbarWidth","msOverflowStyle","component","RouterLink","to","padding","xs","sm","Outlet"],"sourceRoot":""}