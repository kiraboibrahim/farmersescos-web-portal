{"version":3,"file":"static/js/62.995d1c36.chunk.js","mappings":"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","sources":["components/FarmerProfile/FarmerProfile.js","hooks/useUpdateFarmer.js","../node_modules/@mui/icons-material/VerifiedOutlined.js"],"sourcesContent":["import {\n  AspectRatio,\n  Avatar,\n  Box,\n  Button,\n  ButtonGroup,\n  Sheet,\n  Stack,\n  Typography,\n} from \"@mui/joy\";\nimport VerifiedOutlinedIcon from \"@mui/icons-material/VerifiedOutlined\";\nimport SaveOutlinedIcon from \"@mui/icons-material/SaveOutlined\";\nimport DeleteOutlinedIcon from \"@mui/icons-material/DeleteOutlined\";\nimport LockResetOutlinedIcon from \"@mui/icons-material/LockResetOutlined\";\nimport { useParams } from \"react-router\";\nimport { useGetFarmerQuery } from \"../../services/farmer\";\nimport Loading from \"../common/utils/Loading\";\nimport TextInput from \"../common/fields/TextInput\";\nimport Textarea from \"../common/fields/Textarea\";\nimport { Form } from \"formik\";\nimport DirtyFormik from \"../common/fields/DirtyFormik\";\nimport { useState } from \"react\";\nimport resolvePhotoSrc from \"../../utils/resolve-photo-src\";\nimport CSVChippedSelect from \"../common/fields/CSVChippedSelect\";\nimport { ANIMALS, CROPS } from \"../../constants\";\nimport useDeleteFarmer from \"../../hooks/useDeleteFarmer\";\nimport useUpdateFarmer from \"../../hooks/useUpdateFarmer\";\nimport difference from \"../../utils/difference\";\nimport FarmerProfileSchema from \"../../validation-schemas/farmer/FarmerProfileSchema\";\n\nexport default function FarmerProfile() {\n  const [isDirty, setIsDirty] = useState(false);\n  const { id: farmerId } = useParams();\n  const { data: farmer, error, isFetching } = useGetFarmerQuery(farmerId);\n  const [deleteFarmer, isDeletingFarmer] = useDeleteFarmer();\n  const [updateFarmer, isUpdatingFarmer] = useUpdateFarmer();\n\n  if (!!error) {\n    return <Typography>{error}</Typography>;\n  }\n  if (isFetching) {\n    return <Loading />;\n  }\n  if (!!farmer) {\n    return (\n      <Box\n        sx={{\n          padding: 2,\n          marginBottom: 3,\n          maxWidth: 800,\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          position: \"relative\",\n        }}\n      >\n        <Sheet\n          sx={{\n            display: \"flex\",\n            justifyContent: \"center\",\n            borderRadius: \"md\",\n          }}\n          variant=\"soft\"\n          color=\"success\"\n        >\n          <Box sx={{ width: 400, position: \"relative\" }}>\n            <AspectRatio variant=\"plain\">\n              <img\n                src={resolvePhotoSrc(farmer.coverPhoto)}\n                alt={farmer.firstName}\n              />\n            </AspectRatio>\n            <Avatar\n              size=\"lg\"\n              variant=\"solid\"\n              src={resolvePhotoSrc(farmer.profilePhoto)}\n              sx={{\n                position: \"absolute\",\n                left: 10,\n                bottom: -20,\n                boxShadow: \"md\",\n              }}\n            ></Avatar>\n          </Box>\n        </Sheet>\n        <ButtonGroup\n          variant=\"soft\"\n          color=\"warning\"\n          buttonFlex={1}\n          sx={{ marginTop: 4 }}\n        >\n          <Button\n            disabled={isDeletingFarmer}\n            loading={isDeletingFarmer}\n            loadingPosition=\"start\"\n            startDecorator={<DeleteOutlinedIcon />}\n            onClick={async () => await deleteFarmer(farmerId)}\n          >\n            Delete\n          </Button>\n\n          <Button startDecorator={<LockResetOutlinedIcon />}>Reset</Button>\n        </ButtonGroup>\n        <DirtyFormik\n          initialValues={{\n            ...farmer,\n          }}\n          validationSchema={FarmerProfileSchema}\n          onSubmit={async (values) => {\n            const updatedValues = difference(farmer, values);\n            console.log(\"Updated Values: \", updatedValues);\n            await updateFarmer(farmerId, updatedValues);\n          }}\n          onDirty={(isDirty) => setIsDirty(isDirty)}\n        >\n          <Form>\n            <Box sx={{ marginTop: 4 }}>\n              <Stack direction={{ xs: \"column\", sm: \"row\" }} spacing={2}>\n                <TextInput\n                  sx={{ flexGrow: 1 }}\n                  name=\"firstName\"\n                  label=\"First name\"\n                />\n                <TextInput\n                  sx={{ flexGrow: 1 }}\n                  label=\"Last name\"\n                  name=\"lastName\"\n                />\n              </Stack>\n              <TextInput\n                sx={{ marginTop: 2 }}\n                label=\"Phone number\"\n                name=\"phoneNumber\"\n                endDecorator={\n                  farmer.isVerified ? (\n                    <VerifiedOutlinedIcon color=\"success\" />\n                  ) : (\n                    <Button variant=\"soft\" size=\"sm\" color=\"danger\">\n                      Verify\n                    </Button>\n                  )\n                }\n              />\n\n              <Stack\n                direction={{ xs: \"column\", sm: \"row\" }}\n                spacing={2}\n                sx={{ marginTop: 2 }}\n              >\n                <TextInput\n                  sx={{ flexGrow: 1 }}\n                  label=\"Latitude\"\n                  name=\"latitude\"\n                />\n                <TextInput\n                  containerSx={{ flexGrow: 1 }}\n                  label=\"Longitude\"\n                  name=\"longitude\"\n                />\n              </Stack>\n\n              <Stack\n                direction={{ xs: \"column\", sm: \"row\" }}\n                spacing={2}\n                sx={{ marginTop: 3 }}\n              >\n                <TextInput\n                  sx={{ flexGrow: 1 }}\n                  label=\"Farm name\"\n                  name=\"farmName\"\n                  value={farmer.farmName}\n                />\n\n                <TextInput\n                  sx={{ flexGrow: 1 }}\n                  label=\"Farm size\"\n                  name=\"farmSize\"\n                />\n\n                <TextInput\n                  sx={{ flexGrow: 1 }}\n                  label=\"Farm date\"\n                  name=\"farmEstablishedOn\"\n                  type=\"date\"\n                />\n              </Stack>\n              <Textarea\n                sx={{ marginTop: 2 }}\n                label=\"Farm description\"\n                name=\"farmDescription\"\n              />\n\n              <CSVChippedSelect\n                options={ANIMALS}\n                sx={{ marginTop: 2 }}\n                label=\"Animals\"\n                name=\"animalsKept\"\n              />\n              <TextInput\n                name=\"animalsPerType\"\n                label=\"For each animal selected, how many animals do you rear?\"\n                placeholder=\"10,15,20\"\n                sx={{ marginBottom: 1 }}\n              />\n\n              <CSVChippedSelect\n                options={CROPS}\n                sx={{ marginTop: 2 }}\n                label=\"Crops\"\n                name=\"cropsGrown\"\n              />\n              <TextInput\n                name=\"acreagePerCrop\"\n                label=\"For each crop selected, how many acres per crop?\"\n                placeholder=\"10,15,20\"\n                sx={{ marginTop: 2 }}\n              />\n\n              <Stack\n                direction=\"row\"\n                sx={{\n                  marginTop: 3,\n                  width: \"100%\",\n                }}\n              >\n                <Button\n                  sx={{ flexGrow: 1 }}\n                  type=\"reset\"\n                  size=\"md\"\n                  variant=\"soft\"\n                  color=\"success\"\n                  disabled={!isDirty || isUpdatingFarmer}\n                >\n                  Undo Changes\n                </Button>\n                <Button\n                  size=\"md\"\n                  color=\"success\"\n                  variant=\"solid\"\n                  startDecorator={<SaveOutlinedIcon />}\n                  sx={{ flexGrow: 2, marginLeft: 2 }}\n                  type=\"submit\"\n                  disabled={!isDirty || isUpdatingFarmer}\n                  loading={isUpdatingFarmer}\n                  loadingPosition=\"start\"\n                >\n                  Save\n                </Button>\n              </Stack>\n            </Box>\n          </Form>\n        </DirtyFormik>\n      </Box>\n    );\n  }\n}\n","import { toast } from \"react-toastify\";\nimport { useUpdateFarmerMutation } from \"../services/farmer\";\nimport parseError from \"../components/common/utils/parse-error\";\n\nexport default function useUpdateFarmer() {\n  const [_updateFarmer, { isLoading }] = useUpdateFarmerMutation();\n  async function updateFarmer(farmerId, body) {\n    const { unwrap } = _updateFarmer({ farmerId, ...body });\n    try {\n      const data = await unwrap();\n      toast.success(\"Farmer updated\");\n      return data;\n    } catch (err) {\n      toast.error(`Farmer update failed. Reason: ${parseError(err)}`);\n    }\n  }\n\n  return [updateFarmer, isLoading];\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)([/*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M23 11.99 20.56 9.2l.34-3.69-3.61-.82L15.4 1.5 12 2.96 8.6 1.5 6.71 4.69 3.1 5.5l.34 3.7L1 11.99l2.44 2.79-.34 3.7 3.61.82 1.89 3.2 3.4-1.47 3.4 1.46 1.89-3.19 3.61-.82-.34-3.69zm-3.95 1.48-.56.65.08.85.18 1.95-1.9.43-.84.19-.44.74-.99 1.68-1.78-.77-.8-.34-.79.34-1.78.77-.99-1.67-.44-.74-.84-.19-1.9-.43.18-1.96.08-.85-.56-.65L3.67 12l1.29-1.48.56-.65-.09-.86-.18-1.94 1.9-.43.84-.19.44-.74.99-1.68 1.78.77.8.34.79-.34 1.78-.77.99 1.68.44.74.84.19 1.9.43-.18 1.95-.08.85.56.65 1.29 1.47z\"\n}, \"0\"), /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"m10.09 13.75-2.32-2.33-1.48 1.49 3.8 3.81 7.34-7.36-1.48-1.49z\"\n}, \"1\")], 'VerifiedOutlined');"],"names":["FarmerProfile","isDirty","setIsDirty","useState","id","farmerId","useParams","data","farmer","error","isFetching","useGetFarmerQuery","deleteFarmer","isDeletingFarmer","useDeleteFarmer","updateFarmer","isUpdatingFarmer","_updateFarmer","isLoading","useUpdateFarmerMutation","async","body","unwrap","toast","success","err","parseError","useUpdateFarmer","_jsx","Typography","children","Loading","_jsxs","Box","sx","padding","marginBottom","maxWidth","marginLeft","marginRight","position","Sheet","display","justifyContent","borderRadius","variant","color","width","AspectRatio","src","resolvePhotoSrc","coverPhoto","alt","firstName","Avatar","size","profilePhoto","left","bottom","boxShadow","ButtonGroup","buttonFlex","marginTop","Button","disabled","loading","loadingPosition","startDecorator","DeleteOutlinedIcon","onClick","LockResetOutlinedIcon","DirtyFormik","initialValues","validationSchema","FarmerProfileSchema","onSubmit","updatedValues","difference","values","console","log","onDirty","Form","Stack","direction","xs","sm","spacing","TextInput","flexGrow","name","label","endDecorator","isVerified","VerifiedOutlinedIcon","containerSx","value","farmName","type","Textarea","CSVChippedSelect","options","ANIMALS","placeholder","CROPS","SaveOutlinedIcon","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d"],"sourceRoot":""}