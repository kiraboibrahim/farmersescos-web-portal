{"version":3,"file":"static/js/794.8b0e95e8.chunk.js","mappings":"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","sources":["components/OfferList/OfferList.js","../node_modules/@mui/icons-material/ChevronRightOutlined.js"],"sourcesContent":["import {\n  AspectRatio,\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  Chip,\n  IconButton,\n  Typography,\n  Link,\n} from \"@mui/joy\";\nimport ChevronRightOutlinedIcon from \"@mui/icons-material/ChevronRightOutlined\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { useGetFarmerOffersQuery } from \"../../services/farmer\";\nimport { useGetEscoOffersQuery } from \"../../services/esco\";\nimport { useParams } from \"react-router\";\nimport Loading from \"../common/utils/Loading\";\nimport Empty from \"../common/utils/Empty\";\nimport { useState } from \"react\";\nimport resolvePhotoSrc from \"../../utils/resolve-photo-src\";\nimport PaginatedGridList from \"../common/layouts/PaginatedGridList\";\nimport toTitleCase from \"../../utils/toTitleCase\";\nimport getFarmerFullName from \"../../utils/getFarmerFullName\";\nimport Error from \"../common/utils/Error\";\nimport { useGetGroupOffersQuery } from \"../../services/group\";\n\nfunction OfferItem({\n  offer: { product, esco, farmer, isAccepted, expiryDate },\n}) {\n  const getOfferStatus = () => {\n    const isPending = isAccepted === null;\n    const isRejected = isAccepted;\n    const isExpired =\n      (isPending || isRejected) && Date.parse(expiryDate) < Date.now();\n    return isExpired\n      ? \"Expired\"\n      : isPending\n      ? \"Pending\"\n      : isRejected\n      ? \"Rejected\"\n      : isAccepted\n      ? \"Accepted\"\n      : \"Unknown\";\n  };\n  return (\n    <Card size=\"sm\" variant=\"soft\" sx={{ borderRadius: \"lg\" }}>\n      <Card size=\"sm\" variant=\"soft\" sx={{ padding: 0 }}>\n        <CardContent orientation=\"horizontal\">\n          <Box>\n            <Avatar\n              src={resolvePhotoSrc(esco.profilePhoto)}\n              sx={{ marginRight: 1, flexGrow: 1 }}\n            >\n              {esco.name}\n            </Avatar>\n          </Box>\n          <Link\n            component={RouterLink}\n            to={`/escos/${esco.id}`}\n            overlay\n            underline=\"none\"\n            color=\"neutral\"\n            sx={{\n              display: \"block\",\n              overflow: \"hidden\",\n              textOverflow: \"ellipsis\",\n              whiteSpace: \"nowrap\",\n              fontWeight: \"bold\",\n              alignSelf: \"center\",\n              marginRight: \"auto\",\n              maxWidth: 1,\n            }}\n            level=\"body-sm\"\n          >\n            {toTitleCase(esco.name)}\n          </Link>\n        </CardContent>\n      </Card>\n      <AspectRatio>\n        <img src={resolvePhotoSrc(product.coverPhoto)} alt={product.name} />\n      </AspectRatio>\n      <Box sx={{ position: \"relative\" }}>\n        <Chip\n          variant=\"soft\"\n          color=\"warning\"\n          size=\"sm\"\n          sx={{\n            transform: \"translateY(-65%)\",\n            position: \"absolute\",\n          }}\n        >\n          {getOfferStatus()}\n        </Chip>\n      </Box>\n      <Typography\n        component={RouterLink}\n        to={`/products/${product.id}`}\n        sx={{ textDecoration: \"none\", fontSize: \"sm\", marginTop: 1 }}\n      >\n        {toTitleCase(product.name)}\n      </Typography>\n      <Card size=\"sm\">\n        <CardContent orientation=\"horizontal\">\n          <Avatar size=\"sm\" src={resolvePhotoSrc(farmer.profilePhoto)}></Avatar>\n          <Typography level=\"body-sm\" sx={{ alignSelf: \"center\" }}>\n            {toTitleCase(getFarmerFullName(farmer))}\n          </Typography>\n          <IconButton\n            sx={{ marginLeft: \"auto\" }}\n            component={RouterLink}\n            to={`/farmers/${farmer.id}`}\n          >\n            <ChevronRightOutlinedIcon />\n          </IconButton>\n        </CardContent>\n      </Card>\n    </Card>\n  );\n}\n\nexport function FarmerOfferList() {\n  const { id: farmerId } = useParams();\n  const [page, setPage] = useState(1);\n  const {\n    data: offers,\n    isFetching,\n    error,\n  } = useGetFarmerOffersQuery({ farmerId, page });\n\n  return (\n    <OfferList\n      error={error}\n      isFetching={isFetching}\n      offers={offers}\n      onSelectPage={setPage}\n    />\n  );\n}\n\nexport function GroupOfferList() {\n  const { id: groupId } = useParams();\n  const [page, setPage] = useState(1);\n  const {\n    data: offers,\n    isFetching,\n    error,\n  } = useGetGroupOffersQuery({ groupId, page });\n\n  return (\n    <OfferList\n      error={error}\n      isFetching={isFetching}\n      offers={offers}\n      onSelectPage={setPage}\n    />\n  );\n}\nexport function EscoOfferList() {\n  const { id: escoId } = useParams();\n  const [page, setPage] = useState(1);\n  const {\n    data: offers,\n    isFetching,\n    error,\n  } = useGetEscoOffersQuery({ escoId, page });\n\n  return (\n    <OfferList\n      offers={offers}\n      error={error}\n      isFetching={isFetching}\n      onSelectPage={setPage}\n    />\n  );\n}\n\nfunction OfferList({\n  offers,\n  error = null,\n  isFetching = false,\n  onSelectPage = (page) => page,\n}) {\n  if (isFetching) {\n    return <Loading />;\n  }\n  if (!!error) {\n    return <Error error={error} />;\n  }\n  return (\n    <PaginatedGridList\n      data={offers}\n      renderItem={(item) => <OfferItem offer={item} />}\n      renderEmpty={() => <Empty>No offers found</Empty>}\n      onSelectPage={onSelectPage}\n    />\n  );\n}\n","\"use strict\";\n\"use client\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = exports.default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M10 6 8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\"\n}), 'ChevronRightOutlined');"],"names":["OfferItem","_ref","offer","product","esco","farmer","isAccepted","expiryDate","_jsxs","Card","size","variant","sx","borderRadius","children","_jsx","padding","CardContent","orientation","Box","Avatar","src","resolvePhotoSrc","profilePhoto","marginRight","flexGrow","name","Link","component","RouterLink","to","id","overlay","underline","color","display","overflow","textOverflow","whiteSpace","fontWeight","alignSelf","maxWidth","level","toTitleCase","AspectRatio","coverPhoto","alt","position","Chip","transform","getOfferStatus","isPending","isRejected","Date","parse","now","Typography","textDecoration","fontSize","marginTop","getFarmerFullName","IconButton","marginLeft","ChevronRightOutlinedIcon","FarmerOfferList","farmerId","useParams","page","setPage","useState","data","offers","isFetching","error","useGetFarmerOffersQuery","OfferList","onSelectPage","GroupOfferList","groupId","useGetGroupOffersQuery","EscoOfferList","escoId","useGetEscoOffersQuery","_ref2","Loading","Error","PaginatedGridList","renderItem","item","renderEmpty","Empty","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","default","jsx","d"],"sourceRoot":""}